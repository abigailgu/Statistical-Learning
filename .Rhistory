hoverinfo = "text",showlegend = FALSE,symbol = "circle-open")
fig <- fig %>% add_segments(
data = dep_delay_loc,
x =-74.16867, xend = ~lon,
y = 40.6925, yend = ~lat,  size = I(1),text = ~name, hoverinfo = "text")
fig <- fig %>% layout(
title = list(text= '% of Flight Departures Delayed > 15 Min<br>(Hover for airport names)',
font= list(size = 16),text = "Airport = EWR    Year = 2013",font=list(size = 10)),
geo = geo, height=500)
fig <- fig %>% layout(legend = list(x = 0.1, y = -0.4))  %>%
layout(legend=list(title=list(text='<b> Percent range </b>')))
fig
geo <- list(
scope = "north america",
projection = list(type = "albers usa"),
landcolor = toRGB("gray95"), showlegend = FALSE,
countrycolor = toRGB("gray80"))
fig <- plot_geo(locationmode ="world", color = ~per_ch)
fig <- fig %>% add_markers(
data = dep_delay_loc, x = ~lon, y = ~lat, text = ~name,
hoverinfo = "text",showlegend = FALSE,symbols = "circle-open")
fig <- fig %>% add_segments(
data = dep_delay_loc,
x =-74.16867, xend = ~lon,
y = 40.6925, yend = ~lat,  size = I(1),text = ~name, hoverinfo = "text")
fig <- fig %>% layout(
title = list(text= '% of Flight Departures Delayed > 15 Min<br>(Hover for airport names)',
font= list(size = 16) ,text = "Airport = EWR    Year = 2013",font=list(size = 10)),
geo = geo, height=500)
fig <- fig %>% layout(legend = list(x = 0.1, y = -0.4))  %>%
layout(legend=list(title=list(text='<b> Percent range </b>')))
fig
geo <- list(
scope = "north america",
projection = list(type = "albers usa"),
landcolor = toRGB("gray95"), showlegend = FALSE,
countrycolor = toRGB("gray80"))
fig <- plot_geo(locationmode ="world", color = ~per_ch)
fig <- fig %>% add_markers(
data = dep_delay_loc, x = ~lon, y = ~lat, text = ~name,
,showlegend = FALSE,symbols = "0")
fig <- fig %>% add_segments(
data = dep_delay_loc,
x =-74.16867, xend = ~lon,
y = 40.6925, yend = ~lat,  size = I(1),text = ~name, hoverinfo = "text")
fig <- fig %>% layout(
title = list(text= '% of Flight Departures Delayed > 15 Min<br>(Hover for airport names)',
font= list(size = 16) ,text = "Airport = EWR    Year = 2013",font=list(size = 10)),
geo = geo, height=500)
fig <- fig %>% layout(legend = list(x = 0.1, y = -0.4))  %>%
layout(legend=list(title=list(text='<b> Percent range </b>')))
fig
geo <- list(
scope = "north america",
projection = list(type = "albers usa"),
landcolor = toRGB("gray95"), showlegend = FALSE,
countrycolor = toRGB("gray80"))
fig <- plot_geo(locationmode ="world", color = ~per_ch)
fig <- fig %>% add_markers(
data = dep_delay_loc, x = ~lon, y = ~lat, text = ~name,
mode = "markers",showlegend = FALSE, symbols = "0")
fig <- fig %>% add_segments(
data = dep_delay_loc,
x =-74.16867, xend = ~lon,
y = 40.6925, yend = ~lat,  size = I(1),text = ~name, hoverinfo = "text")
fig <- fig %>% layout(
title = list(text= '% of Flight Departures Delayed > 15 Min<br>(Hover for airport names)',
font= list(size = 16) ,text = "Airport = EWR    Year = 2013",font=list(size = 10)),
geo = geo, height=500)
fig <- fig %>% layout(legend = list(x = 0.1, y = -0.4))  %>%
layout(legend=list(title=list(text='<b> Percent range </b>')))
fig
geo <- list(
scope = "north america",
projection = list(type = "albers usa"),
landcolor = toRGB("gray95"), showlegend = FALSE,
countrycolor = toRGB("gray80"))
fig <- plot_geo(locationmode ="world", color = ~per_ch)
fig <- fig %>% add_markers(
data = dep_delay_loc, x = ~lon, y = ~lat, text = ~name,
showlegend = FALSE)
fig <- fig %>% add_segments(
data = dep_delay_loc,
x =-74.16867, xend = ~lon,
y = 40.6925, yend = ~lat,  size = I(1),text = ~name, hoverinfo = "text")
fig <- fig %>% layout(
title = list(text= '<b>% of Flight Departures Delayed > 15 Min</b><br>(Hover for airport names)<br>Airport = EWR    Year = 2013'),
geo = geo, height=500)
fig <- fig %>% layout(legend = list(x = 0.1, y = -0.4))  %>%
layout(legend=list(title=list(text='<b> Percent range </b>')))
fig
geo <- list(
scope = "north america",
projection = list(type = "albers usa"),
landcolor = toRGB("gray95"), showlegend = FALSE,
countrycolor = toRGB("gray80"))
fig <- plot_geo(locationmode ="world", color = ~per_ch)
fig <- fig %>% add_markers(
data = dep_delay_loc, x = ~lon, y = ~lat, text = ~name,
showlegend = FALSE)
fig <- fig %>% add_segments(
data = dep_delay_loc,
x =-74.16867, xend = ~lon,
y = 40.6925, yend = ~lat,  size = I(1),text = ~name, hoverinfo = "text")
fig <- fig %>% layout(
title = list(text= '<b>% of Flight Departures Delayed > 15 Min</b><br>(Hover for airport names)<br>Airport = EWR    Year = 2013'),
geo = geo, height=600)
fig <- fig %>% layout(legend = list(x = 0.1, y = -0.4))  %>%
layout(legend=list(title=list(text='<b> Percent range </b>')))
fig
geo <- list(
scope = "north america",
projection = list(type = "albers usa"),
landcolor = toRGB("gray95"), showlegend = FALSE,
countrycolor = toRGB("gray80"))
fig <- plot_geo(locationmode ="world", color = ~per_ch)
fig <- fig %>% add_markers(
data = dep_delay_loc, x = ~lon, y = ~lat, text = ~name,
showlegend = FALSE)
fig <- fig %>% add_segments(
data = dep_delay_loc,
x =-74.16867, xend = ~lon,
y = 40.6925, yend = ~lat,  size = I(1),text = ~name, hoverinfo = "text")
fig <- fig %>% layout(
title = list(text= '<b>% of Flight Departures Delayed > 15 Min</b><br>Airport = EWR    Year = 2013'),
geo = geo, height=600)
fig <- fig %>% layout(legend = list(x = 0.1, y = -0.4))  %>%
layout(legend=list(title=list(text='<b> Percent range </b>')))
fig
geo <- list(
scope = "north america",
projection = list(type = "albers usa"),
landcolor = toRGB("gray95"), showlegend = FALSE,
countrycolor = toRGB("gray80"))
fig <- plot_geo(locationmode ="world", color = ~per_ch)
fig <- fig %>% add_markers(
data = dep_delay_loc, x = ~lon, y = ~lat, text = ~name,
showlegend = FALSE)
fig <- fig %>% add_segments(
data = dep_delay_loc,
x =-74.16867, xend = ~lon,
y = 40.6925, yend = ~lat,  size = I(1),text = ~name, hoverinfo = "text")
fig <- fig %>% layout(
title = list(text= '<b>% of Flight Departures Delayed > 15 Min</b><br>Airport = EWR    Year = 2013'),
geo = geo, height=500)
fig <- fig %>% layout(legend = list(x = 0.1, y = -0.4))  %>%
layout(legend=list(title=list(text='<b> Percent range </b>')))
fig
View(week_cycles_min)
#EWR/ LGA/ JFK to choose
week_cycles <- as.data.frame(flights) %>% filter(origin == 'EWR') %>% dplyr::select(time_hour ,dep_delay ,sched_dep_time)
week_cycles$time_hour <- as.Date(week_cycles$time_hour)
week_cycles<- week_cycles %>% mutate(delay = if_else(dep_delay <= 15 ,0,1,0))
l <- length(week_cycles_freq$frequency)
week_cycles_freq <- week_cycles %>% group_by(time_hour) %>% summarise(frequency = n())
week_cycles_delay <- week_cycles %>% group_by(time_hour) %>% summarise(sum(delay))
week_cycles_min <- week_cycles_freq[c(2:(l-1)),:] %>% mutate(local_min = (week_cycles_freq$frequency == runmin(week_cycles_freq$frequency,length(week_cycles_freq$frequency)/2)))
#EWR/ LGA/ JFK to choose
week_cycles <- as.data.frame(flights) %>% filter(origin == 'EWR') %>% dplyr::select(time_hour ,dep_delay ,sched_dep_time)
week_cycles$time_hour <- as.Date(week_cycles$time_hour)
week_cycles<- week_cycles %>% mutate(delay = if_else(dep_delay <= 15 ,0,1,0))
l <- length(week_cycles_freq$frequency)
week_cycles_freq <- week_cycles %>% group_by(time_hour) %>% summarise(frequency = n())
week_cycles_delay <- week_cycles %>% group_by(time_hour) %>% summarise(sum(delay))
week_cycles_min <- week_cycles_freq[c(2:(l-1)),] %>% mutate(local_min = (week_cycles_freq$frequency == runmin(week_cycles_freq$frequency,length(week_cycles_freq$frequency)/2)))
#EWR/ LGA/ JFK to choose
week_cycles <- as.data.frame(flights) %>% filter(origin == 'EWR') %>% dplyr::select(time_hour ,dep_delay ,sched_dep_time)
week_cycles$time_hour <- as.Date(week_cycles$time_hour)
week_cycles<- week_cycles %>% mutate(delay = if_else(dep_delay <= 15 ,0,1,0))
l <- length(week_cycles_freq$frequency)
week_cycles_freq <- week_cycles %>% group_by(time_hour) %>% summarise(frequency = n())
week_cycles_delay <- week_cycles %>% group_by(time_hour) %>% summarise(sum(delay))
week_cycles_min <- week_cycles_freq[c(2:(l-1)),]
week_cycles_min <- week_cycles_min %>% mutate(local_min = (week_cycles_min$frequency == runmin(week_cycles_min$frequency,length(week_cycles_min$frequency)/2)))
week_cycles_min <- week_cycles_min %>% filter(local_min == T)
ggplot(data = week_cycles_freq,aes(x = time_hour,
y= week_cycles_freq$frequency,colour = "blue")) +
geom_point(aes(color = "blue")) + geom_line(color = "blue") +
geom_point(data = week_cycles_delay,aes(x=time_hour,y= `sum(delay)`, color ='red')) +
geom_linerange(data = week_cycles_delay,aes(x= time_hour, ymax =`sum(delay)` ,ymin=0),color = 'red') + geom_point(data = week_cycles_min)+
scale_color_identity(name ="" ,breaks = c("blue","red"),
labels = c("All Flights (scheculed for departure)",
"Late Flights (departure delayed >15)"),
guide = "legend") +
theme_light()  +
xlab("Date")+ ylab("Flights per day") +
theme(legend.position="top",legend.direction = "vertical") +
ggtitle(label = "Weekly Cycles", subtitle = "the airport, we need to choose, Year = 2013") +
theme(plot.title = element_text(hjust = 0.5,size = 20),plot.subtitle = element_text(hjust = 0.5,size = 15))
#EWR/ LGA/ JFK to choose
week_cycles <- as.data.frame(flights) %>% filter(origin == 'EWR') %>% dplyr::select(time_hour ,dep_delay ,sched_dep_time)
week_cycles$time_hour <- as.Date(week_cycles$time_hour)
week_cycles<- week_cycles %>% mutate(delay = if_else(dep_delay <= 15 ,0,1,0))
l <- length(week_cycles_freq$frequency)
week_cycles_freq <- week_cycles %>% group_by(time_hour) %>% summarise(frequency = n())
week_cycles_delay <- week_cycles %>% group_by(time_hour) %>% summarise(sum(delay))
week_cycles_min <- week_cycles_freq[c(2:(l-1)),]
week_cycles_min <- week_cycles_min %>% mutate(local_min = (week_cycles_min$frequency == runmin(week_cycles_min$frequency,length(week_cycles_min$frequency)/2)))
week_cycles_min <- week_cycles_min %>% filter(local_min == T)
ggplot(data = week_cycles_freq,aes(x = time_hour,
y= week_cycles_freq$frequency,colour = "blue")) +
geom_point(aes(color = "blue")) + geom_line(color = "blue") +
geom_point(data = week_cycles_delay,aes(x=time_hour,y= `sum(delay)`, color ='red')) +
geom_linerange(data = week_cycles_delay,aes(x= time_hour, ymax =`sum(delay)` ,ymin=0),color = 'red') + geom_point(data = week_cycles_min, aes(x=time_hour,y=week_cycles_min$frequency))+
scale_color_identity(name ="" ,breaks = c("blue","red"),
labels = c("All Flights (scheculed for departure)",
"Late Flights (departure delayed >15)"),
guide = "legend") +
theme_light()  +
xlab("Date")+ ylab("Flights per day") +
theme(legend.position="top",legend.direction = "vertical") +
ggtitle(label = "Weekly Cycles", subtitle = "the airport, we need to choose, Year = 2013") +
theme(plot.title = element_text(hjust = 0.5,size = 20),plot.subtitle = element_text(hjust = 0.5,size = 15))
#EWR/ LGA/ JFK to choose
week_cycles <- as.data.frame(flights) %>% filter(origin == 'EWR') %>% dplyr::select(time_hour ,dep_delay ,sched_dep_time)
week_cycles$time_hour <- as.Date(week_cycles$time_hour)
week_cycles<- week_cycles %>% mutate(delay = if_else(dep_delay <= 15 ,0,1,0))
l <- length(week_cycles_freq$frequency)
week_cycles_freq <- week_cycles %>% group_by(time_hour) %>% summarise(frequency = n())
week_cycles_delay <- week_cycles %>% group_by(time_hour) %>% summarise(sum(delay))
week_cycles_min <- week_cycles_freq[c(2:(l-1)),]
week_cycles_min <- week_cycles_min %>% mutate(local_min = (week_cycles_min$frequency == runmin(week_cycles_min$frequency,length(week_cycles_min$frequency)/2)))
week_cycles_min <- week_cycles_min %>% filter(local_min == T)
ggplot(data = week_cycles_freq,aes(x = time_hour,
y= week_cycles_freq$frequency,colour = "blue")) +
geom_point(aes(color = "blue")) + geom_line(color = "blue") +
geom_point(data = week_cycles_delay,aes(x=time_hour,y= `sum(delay)`, color ='red')) +
geom_linerange(data = week_cycles_delay,aes(x= time_hour, ymax =`sum(delay)` ,ymin=0),color = 'red') + geom_point(data = week_cycles_min, aes(x=time_hour,y=week_cycles_min$frequency,colur = "yellow"))+
scale_color_identity(name ="" ,breaks = c("blue","red"),
labels = c("All Flights (scheculed for departure)",
"Late Flights (departure delayed >15)"),
guide = "legend") +
theme_light()  +
xlab("Date")+ ylab("Flights per day") +
theme(legend.position="top",legend.direction = "vertical") +
ggtitle(label = "Weekly Cycles", subtitle = "the airport, we need to choose, Year = 2013") +
theme(plot.title = element_text(hjust = 0.5,size = 20),plot.subtitle = element_text(hjust = 0.5,size = 15))
#EWR/ LGA/ JFK to choose
week_cycles <- as.data.frame(flights) %>% filter(origin == 'EWR') %>% dplyr::select(time_hour ,dep_delay ,sched_dep_time)
week_cycles$time_hour <- as.Date(week_cycles$time_hour)
week_cycles<- week_cycles %>% mutate(delay = if_else(dep_delay <= 15 ,0,1,0))
l <- length(week_cycles_freq$frequency)
week_cycles_freq <- week_cycles %>% group_by(time_hour) %>% summarise(frequency = n())
week_cycles_delay <- week_cycles %>% group_by(time_hour) %>% summarise(sum(delay))
week_cycles_min <- week_cycles_freq[c(2:(l-1)),]
week_cycles_min <- week_cycles_min %>% mutate(local_min = (week_cycles_min$frequency == runmin(week_cycles_min$frequency,length(week_cycles_min$frequency)/2)))
week_cycles_min <- week_cycles_min %>% filter(local_min == T)
ggplot(data = week_cycles_freq,aes(x = time_hour,
y= week_cycles_freq$frequency,colour = "blue")) +
geom_point(aes(color = "blue")) + geom_line(color = "blue") +
geom_point(data = week_cycles_delay,aes(x=time_hour,y= `sum(delay)`, color ='red')) +
geom_linerange(data = week_cycles_delay,aes(x= time_hour, ymax =`sum(delay)` ,ymin=0),color = 'red') +
geom_point(data = week_cycles_min, aes(x=time_hour,y=week_cycles_min$frequency,color = "yellow"))+
scale_color_identity(name ="" ,breaks = c("blue","red"),
labels = c("All Flights (scheculed for departure)",
"Late Flights (departure delayed >15)"),
guide = "legend") +
theme_light()  +
xlab("Date")+ ylab("Flights per day") +
theme(legend.position="top",legend.direction = "vertical") +
ggtitle(label = "Weekly Cycles", subtitle = "the airport, we need to choose, Year = 2013") +
theme(plot.title = element_text(hjust = 0.5,size = 20),plot.subtitle = element_text(hjust = 0.5,size = 15))
#EWR/ LGA/ JFK to choose
week_cycles <- as.data.frame(flights) %>% filter(origin == 'EWR') %>% dplyr::select(time_hour ,dep_delay ,sched_dep_time)
week_cycles$time_hour <- as.Date(week_cycles$time_hour)
week_cycles<- week_cycles %>% mutate(delay = if_else(dep_delay <= 15 ,0,1,0))
l <- length(week_cycles_freq$frequency)
week_cycles_freq <- week_cycles %>% group_by(time_hour) %>% summarise(frequency = n())
week_cycles_delay <- week_cycles %>% group_by(time_hour) %>% summarise(sum(delay))
week_cycles_min <- week_cycles_freq[c(2:(l-1)),]
week_cycles_min <- week_cycles_min %>% mutate(local_min = (week_cycles_min$frequency == runmin(week_cycles_min$frequency,length(week_cycles_min$frequency)/2)))
week_cycles_min <- week_cycles_min %>% filter(local_min == T)
ggplot(data = week_cycles_freq,aes(x = time_hour,
y= week_cycles_freq$frequency,colour = "blue")) +
geom_point(aes(color = "blue")) + geom_line(color = "blue") +
geom_point(data = week_cycles_delay,aes(x=time_hour,y= `sum(delay)`, color ='red')) +
geom_linerange(data = week_cycles_delay,aes(x= time_hour, ymax =`sum(delay)` ,ymin=0),color = 'red') +
geom_point(data = week_cycles_min, aes(x=time_hour,y=week_cycles_min$frequency,
color = "lightblue",size = 5))+
scale_color_identity(name ="" ,breaks = c("blue","red"),
labels = c("All Flights (scheculed for departure)",
"Late Flights (departure delayed >15)"),
guide = "legend") +
theme_light()  +
xlab("Date")+ ylab("Flights per day") +
theme(legend.position="top",legend.direction = "vertical") +
ggtitle(label = "Weekly Cycles", subtitle = "the airport, we need to choose, Year = 2013") +
theme(plot.title = element_text(hjust = 0.5,size = 20),plot.subtitle = element_text(hjust = 0.5,size = 15))
#EWR/ LGA/ JFK to choose
week_cycles <- as.data.frame(flights) %>% filter(origin == 'EWR') %>% dplyr::select(time_hour ,dep_delay ,sched_dep_time)
week_cycles$time_hour <- as.Date(week_cycles$time_hour)
week_cycles<- week_cycles %>% mutate(delay = if_else(dep_delay <= 15 ,0,1,0))
l <- length(week_cycles_freq$frequency)
week_cycles_freq <- week_cycles %>% group_by(time_hour) %>% summarise(frequency = n())
week_cycles_delay <- week_cycles %>% group_by(time_hour) %>% summarise(sum(delay))
week_cycles_min <- week_cycles_freq[c(2:(l-1)),]
week_cycles_min <- week_cycles_min %>% mutate(local_min = (week_cycles_min$frequency == runmin(week_cycles_min$frequency,length(week_cycles_min$frequency)/1.5)))
week_cycles_min <- week_cycles_min %>% filter(local_min == T)
ggplot(data = week_cycles_freq,aes(x = time_hour,
y= week_cycles_freq$frequency,colour = "blue")) +
geom_point(aes(color = "blue")) + geom_line(color = "blue") +
geom_point(data = week_cycles_delay,aes(x=time_hour,y= `sum(delay)`, color ='red')) +
geom_linerange(data = week_cycles_delay,aes(x= time_hour, ymax =`sum(delay)` ,ymin=0),color = 'red') +
geom_point(data = week_cycles_min, aes(x=time_hour,y=week_cycles_min$frequency,
color = "lightblue",size = 7))+
scale_color_identity(name ="" ,breaks = c("blue","red"),
labels = c("All Flights (scheculed for departure)",
"Late Flights (departure delayed >15)"),
guide = "legend") +
theme_light()  +
xlab("Date")+ ylab("Flights per day") +
theme(legend.position="top",legend.direction = "vertical") +
ggtitle(label = "Weekly Cycles", subtitle = "the airport, we need to choose, Year = 2013") +
theme(plot.title = element_text(hjust = 0.5,size = 20),plot.subtitle = element_text(hjust = 0.5,size = 15))
#EWR/ LGA/ JFK to choose
week_cycles <- as.data.frame(flights) %>% filter(origin == 'EWR') %>% dplyr::select(time_hour ,dep_delay ,sched_dep_time)
week_cycles$time_hour <- as.Date(week_cycles$time_hour)
week_cycles<- week_cycles %>% mutate(delay = if_else(dep_delay <= 15 ,0,1,0))
l <- length(week_cycles_freq$frequency)
week_cycles_freq <- week_cycles %>% group_by(time_hour) %>% summarise(frequency = n())
week_cycles_delay <- week_cycles %>% group_by(time_hour) %>% summarise(sum(delay))
week_cycles_min <- week_cycles_freq[c(2:(l-1)),]
week_cycles_min <- week_cycles_min %>% mutate(local_min = (week_cycles_min$frequency == runmin(week_cycles_min$frequency,length(week_cycles_min$frequency)/2)))
week_cycles_min <- week_cycles_min %>% filter(local_min == T)
ggplot(data = week_cycles_freq,aes(x = time_hour,
y= week_cycles_freq$frequency,colour = "blue")) +
geom_point(aes(color = "blue")) + geom_line(color = "blue") +
geom_point(data = week_cycles_delay,aes(x=time_hour,y= `sum(delay)`, color ='red')) +
geom_linerange(data = week_cycles_delay,aes(x= time_hour, ymax =`sum(delay)` ,ymin=0),color = 'red') +
geom_point(data = week_cycles_min, aes(x=time_hour,y=week_cycles_min$frequency,
color = "lightblue",size = 7))+
scale_color_identity(name ="" ,breaks = c("blue","red"),
labels = c("All Flights (scheculed for departure)",
"Late Flights (departure delayed >15)"),
guide = "legend") +
theme_light()  +
xlab("Date")+ ylab("Flights per day") +
theme(legend.position="top",legend.direction = "vertical") +
ggtitle(label = "Weekly Cycles", subtitle = "the airport, we need to choose, Year = 2013") +
theme(plot.title = element_text(hjust = 0.5,size = 20),plot.subtitle = element_text(hjust = 0.5,size = 15))
#EWR/ LGA/ JFK to choose
week_cycles <- as.data.frame(flights) %>% filter(origin == 'EWR') %>% dplyr::select(time_hour ,dep_delay ,sched_dep_time)
week_cycles$time_hour <- as.Date(week_cycles$time_hour)
week_cycles<- week_cycles %>% mutate(delay = if_else(dep_delay <= 15 ,0,1,0))
l <- length(week_cycles_freq$frequency)
week_cycles_freq <- week_cycles %>% group_by(time_hour) %>% summarise(frequency = n())
week_cycles_delay <- week_cycles %>% group_by(time_hour) %>% summarise(sum(delay))
week_cycles_min <- week_cycles_freq[c(2:(l-1)),]
week_cycles_min <- week_cycles_min %>% mutate(local_min = (week_cycles_min$frequency == runmin(week_cycles_min$frequency,length(week_cycles_min$frequency)/2.5)))
week_cycles_min <- week_cycles_min %>% filter(local_min == T)
ggplot(data = week_cycles_freq,aes(x = time_hour,
y= week_cycles_freq$frequency,colour = "blue")) +
geom_point(aes(color = "blue")) + geom_line(color = "blue") +
geom_point(data = week_cycles_delay,aes(x=time_hour,y= `sum(delay)`, color ='red')) +
geom_linerange(data = week_cycles_delay,aes(x= time_hour, ymax =`sum(delay)` ,ymin=0),color = 'red') +
geom_point(data = week_cycles_min, aes(x=time_hour,y=week_cycles_min$frequency,
color = "lightblue",size = 7))+
scale_color_identity(name ="" ,breaks = c("blue","red"),
labels = c("All Flights (scheculed for departure)",
"Late Flights (departure delayed >15)"),
guide = "legend") +
theme_light()  +
xlab("Date")+ ylab("Flights per day") +
theme(legend.position="top",legend.direction = "vertical") +
ggtitle(label = "Weekly Cycles", subtitle = "the airport, we need to choose, Year = 2013") +
theme(plot.title = element_text(hjust = 0.5,size = 20),plot.subtitle = element_text(hjust = 0.5,size = 15))
#EWR/ LGA/ JFK to choose
week_cycles <- as.data.frame(flights) %>% filter(origin == 'EWR') %>% dplyr::select(time_hour ,dep_delay ,sched_dep_time)
week_cycles$time_hour <- as.Date(week_cycles$time_hour)
week_cycles<- week_cycles %>% mutate(delay = if_else(dep_delay <= 15 ,0,1,0))
l <- length(week_cycles_freq$frequency)
week_cycles_freq <- week_cycles %>% group_by(time_hour) %>% summarise(frequency = n())
week_cycles_delay <- week_cycles %>% group_by(time_hour) %>% summarise(sum(delay))
week_cycles_min <- week_cycles_freq[c(2:(l-1)),]
week_cycles_min <- week_cycles_min %>% mutate(local_min = (week_cycles_min$frequency == runmin(week_cycles_min$frequency,length(week_cycles_min$frequency)/2)))
week_cycles_min <- week_cycles_min %>% filter(local_min == T)
ggplot(data = week_cycles_freq,aes(x = time_hour,
y= week_cycles_freq$frequency,colour = "blue")) +
geom_point(aes(color = "blue")) + geom_line(color = "blue") +
geom_point(data = week_cycles_delay,aes(x=time_hour,y= `sum(delay)`, color ='red')) +
geom_linerange(data = week_cycles_delay,aes(x= time_hour, ymax =`sum(delay)` ,ymin=0),color = 'red') +
geom_point(data = week_cycles_min, aes(x=time_hour,y=week_cycles_min$frequency,
color = "lightblue",size = 7))+
scale_color_identity(name ="" ,breaks = c("blue","red"),
labels = c("All Flights (scheculed for departure)",
"Late Flights (departure delayed >15)"),
guide = "legend") +
theme_light()  +
xlab("Date")+ ylab("Flights per day") +
theme(legend.position="top",legend.direction = "vertical") +
ggtitle(label = "Weekly Cycles", subtitle = "the airport, we need to choose, Year = 2013") +
theme(plot.title = element_text(hjust = 0.5,size = 20),plot.subtitle = element_text(hjust = 0.5,size = 15))
#EWR/ LGA/ JFK to choose
week_cycles <- as.data.frame(flights) %>% filter(origin == 'EWR') %>% dplyr::select(time_hour ,dep_delay ,sched_dep_time)
week_cycles$time_hour <- as.Date(week_cycles$time_hour)
week_cycles<- week_cycles %>% mutate(delay = if_else(dep_delay <= 15 ,0,1,0))
l <- length(week_cycles_freq$frequency)
week_cycles_freq <- week_cycles %>% group_by(time_hour) %>% summarise(frequency = n())
week_cycles_delay <- week_cycles %>% group_by(time_hour) %>% summarise(sum(delay))
week_cycles_min <- week_cycles_freq[c(2:(l-1)),]
week_cycles_min <- week_cycles_min %>% mutate(local_min = (week_cycles_min$frequency == runmin(week_cycles_min$frequency,length(week_cycles_min$frequency)/1.2)))
week_cycles_min <- week_cycles_min %>% filter(local_min == T)
ggplot(data = week_cycles_freq,aes(x = time_hour,
y= week_cycles_freq$frequency,colour = "blue")) +
geom_point(aes(color = "blue")) + geom_line(color = "blue") +
geom_point(data = week_cycles_delay,aes(x=time_hour,y= `sum(delay)`, color ='red')) +
geom_linerange(data = week_cycles_delay,aes(x= time_hour, ymax =`sum(delay)` ,ymin=0),color = 'red') +
geom_point(data = week_cycles_min, aes(x=time_hour,y=week_cycles_min$frequency,
color = "lightblue",size = 7))+
scale_color_identity(name ="" ,breaks = c("blue","red","lightblue"),
labels = c("All Flights (scheculed for departure)",
"Late Flights (departure delayed >15)"),
"Fewer flights"
guide = "legend") +
#EWR/ LGA/ JFK to choose
week_cycles <- as.data.frame(flights) %>% filter(origin == 'EWR') %>% dplyr::select(time_hour ,dep_delay ,sched_dep_time)
week_cycles$time_hour <- as.Date(week_cycles$time_hour)
week_cycles<- week_cycles %>% mutate(delay = if_else(dep_delay <= 15 ,0,1,0))
l <- length(week_cycles_freq$frequency)
week_cycles_freq <- week_cycles %>% group_by(time_hour) %>% summarise(frequency = n())
week_cycles_delay <- week_cycles %>% group_by(time_hour) %>% summarise(sum(delay))
week_cycles_min <- week_cycles_freq[c(2:(l-1)),]
week_cycles_min <- week_cycles_min %>% mutate(local_min = (week_cycles_min$frequency == runmin(week_cycles_min$frequency,length(week_cycles_min$frequency)/1.2)))
week_cycles_min <- week_cycles_min %>% filter(local_min == T)
ggplot(data = week_cycles_freq,aes(x = time_hour,
y= week_cycles_freq$frequency,colour = "blue")) +
geom_point(aes(color = "blue")) + geom_line(color = "blue") +
geom_point(data = week_cycles_delay,aes(x=time_hour,y= `sum(delay)`, color ='red')) +
geom_linerange(data = week_cycles_delay,aes(x= time_hour, ymax =`sum(delay)` ,ymin=0),color = 'red') +
geom_point(data = week_cycles_min, aes(x=time_hour,y=week_cycles_min$frequency,
color = "lightblue",size = 7))+
scale_color_identity(name ="" ,breaks = c("blue","red","lightblue"),
labels = c("All Flights (scheculed for departure)",
"Late Flights (departure delayed >15)",
"Fewer flights")
guide = "legend") +
#EWR/ LGA/ JFK to choose
week_cycles <- as.data.frame(flights) %>% filter(origin == 'EWR') %>% dplyr::select(time_hour ,dep_delay ,sched_dep_time)
week_cycles$time_hour <- as.Date(week_cycles$time_hour)
week_cycles<- week_cycles %>% mutate(delay = if_else(dep_delay <= 15 ,0,1,0))
l <- length(week_cycles_freq$frequency)
week_cycles_freq <- week_cycles %>% group_by(time_hour) %>% summarise(frequency = n())
week_cycles_delay <- week_cycles %>% group_by(time_hour) %>% summarise(sum(delay))
week_cycles_min <- week_cycles_freq[c(2:(l-1)),]
week_cycles_min <- week_cycles_min %>% mutate(local_min = (week_cycles_min$frequency == runmin(week_cycles_min$frequency,length(week_cycles_min$frequency)/1.2)))
week_cycles_min <- week_cycles_min %>% filter(local_min == T)
ggplot(data = week_cycles_freq,aes(x = time_hour,
y= week_cycles_freq$frequency,colour = "blue")) +
geom_point(aes(color = "blue")) + geom_line(color = "blue") +
geom_point(data = week_cycles_delay,aes(x=time_hour,y= `sum(delay)`, color ='red')) +
geom_linerange(data = week_cycles_delay,aes(x= time_hour, ymax =`sum(delay)` ,ymin=0),color = 'red') +
geom_point(data = week_cycles_min, aes(x=time_hour,y=week_cycles_min$frequency,
color = "lightblue",size = 7))+
scale_color_identity(name ="" ,breaks = c("blue","red","lightblue"),
labels = c("All Flights (scheculed for departure)",
"Late Flights (departure delayed >15)",
"Fewer flights")
guide = "legend") +
#EWR/ LGA/ JFK to choose
week_cycles <- as.data.frame(flights) %>% filter(origin == 'EWR') %>% dplyr::select(time_hour ,dep_delay ,sched_dep_time)
week_cycles$time_hour <- as.Date(week_cycles$time_hour)
week_cycles<- week_cycles %>% mutate(delay = if_else(dep_delay <= 15 ,0,1,0))
l <- length(week_cycles_freq$frequency)
week_cycles_freq <- week_cycles %>% group_by(time_hour) %>% summarise(frequency = n())
week_cycles_delay <- week_cycles %>% group_by(time_hour) %>% summarise(sum(delay))
week_cycles_min <- week_cycles_freq[c(2:(l-1)),]
week_cycles_min <- week_cycles_min %>% mutate(local_min = (week_cycles_min$frequency == runmin(week_cycles_min$frequency,length(week_cycles_min$frequency)/1.2)))
week_cycles_min <- week_cycles_min %>% filter(local_min == T)
ggplot(data = week_cycles_freq,aes(x = time_hour,
y= week_cycles_freq$frequency,colour = "blue")) +
geom_point(aes(color = "blue")) + geom_line(color = "blue") +
geom_point(data = week_cycles_delay,aes(x=time_hour,y= `sum(delay)`, color ='red')) +
geom_linerange(data = week_cycles_delay,aes(x= time_hour, ymax =`sum(delay)` ,ymin=0),color = 'red') +
geom_point(data = week_cycles_min, aes(x=time_hour,y=week_cycles_min$frequency,
color = "lightblue",size = 7))+
scale_color_identity(name ="" ,breaks = c("blue","red","lightblue"),
labels = c("All Flights (scheculed for departure)",
"Late Flights (departure delayed >15)",
"Fewer flights" )
guide = "legend") +
# tools and data upload
library(ggplot2)
library(dplyr)
library(scales) # needed for formatting y-axis labels to non-scientific type
library(tidyr)
library(tidyverse)
library(ggthemes)
library(datasets)
library(nycflights13)
library(kableExtra) #table styling
library(e1071) # kurtosis and skeeness
library(MASS) # reg modeling
library(corrplot)
library(caTools)
library(plotly)
options(scipen = 999)
flights <- as.data.frame(nycflights13::flights)
wheather <- nycflights13::weather
airports <- nycflights13::airports
planes <- nycflights13::planes
#summary(flights)
flights_con <- flights[,c(2:9, 11 ,15:19)]
flights_catgory <- flights[,c(10 ,12:15)]
catgory <- colnames(flights_catgory)
carrier <- flights_catgory %>% count(carrier)# helpful
kable(carrier, row.names = F) %>% kable_styling()
tailnum <-flights_catgory %>% count(tailnum)
kable(tailnum, row.names = F) %>% kable_styling()
origin <- flights_catgory %>% count(origin) #helpful
kable(origin, row.names = F) %>% kable_styling()
dest <- flights_catgory %>% count(dest) # need to check
kable(dest, row.names = F) %>% kable_styling()
