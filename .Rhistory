ggplot(data = Weather_cond, mapping = aes(x = day, y = air_delay)) +
geom_boxplot(mapping = aes(group = cut_width(day , 31)))
Weather_cond
summary(wheather)
Weather_cond$month <- as.character(Weather_cond$month)
ggplot(data = Weather_cond, mapping = aes(x = month, y = air_delay)) +
geom_boxplot(mapping = aes(group = cut_width(month , 31)))
ggplot(data = Weather_cond, mapping = aes(x = month, y = air_delay)) +
geom_boxplot()
Weather_cond$day <- as.character(Weather_cond$day)
ggplot(data = Weather_cond, mapping = aes(x = day, y = air_delay)) +
geom_boxplot()
summary(wheather)
wheather
ggplot(data = Weather_cond, mapping = aes(x = wind_gust, y = air_delay)) +
geom_boxplot()
ggplot(data = Weather_cond, mapping = aes(x = wind_gust, y = air_delay)) +   geom_boxplot(mapping = aes(group = cut_width(wind_gust, 0.1)))
summary(wheather)
ggplot(data = Weather_cond, mapping = aes(x = wind_speed         , y = air_delay)) +   geom_boxplot(mapping = aes(group = cut_width(wind_gust, 0.1)))
ggplot(data = Weather_cond, mapping = aes(x = wind_speed, y = air_delay)) + geom_point() +geom_smooth()
by_wind_speed <- Weather_cond %>%  group_by(wind_speed) %>% summarise(Avg_dep_delay = mean(dep_delay))
by_wind_speed
by_wind_speed
flights_delayed <- filter(flights, dep_delay >0 )
flights_delayed
Weather_cond <- left_join(flights_delayed, wheather)
flights_delayed
flights_delayed <- filter(flights, dep_delay >0 )
by_wind_speed <- flights_delayed %>%  group_by(wind_speed) %>% summarise(Avg_dep_delay = mean(dep_delay))
by_wind_speed <- flights_delayed %>%  group_by(origin, time_hour) %>% summarise(Avg_dep_delay = mean(dep_delay))
by_wind_speed
flights_delayed <- filter(flights, dep_delay >0 )
flights_delayed <- flights_delayed %>%  group_by(origin, time_hour) %>% summarise(Avg_dep_delay = mean(dep_delay))
Weather_cond <- left_join(flights_delayed, wheather)
Weather_cond
ggplot(data = Weather_cond, mapping = aes(x = wind_speed, y = Avg_dep_delay)) + geom_point() +geom_smooth()
x <- Weather_cond %>% group_by(wind_speed) %>% summarise(avg = mean(Avg_dep_delay))
x
ggplot(data = x, mapping = aes(x = wind_speed, y = Avg_dep_delay)) + geom_point() +geom_smooth()
ggplot(data = x, mapping = aes(x = wind_speed, y = Avg_dep_delay)) + geom_point() +geom_smooth()
x <- Weather_cond %>% group_by(wind_speed) %>% summarise(Avg_dep_delay = mean(Avg_dep_delay))
ggplot(data = x, mapping = aes(x = wind_speed, y = Avg_dep_delay)) + geom_point() +geom_smooth()
x
View(x)
x = x[!is.na(x$wind_speed),]
ggplot(data = x, mapping = aes(x = wind_speed, y = Avg_dep_delay)) + geom_point() +geom_smooth()
ggplot(data = x, mapping = aes(x = wind_speed, y = Avg_dep_delay)) + geom_point() + geom_smooth(method = "lm") +labs(x = "Wind Speed (mph)",
y="Average Departure Delay Time (minutes)",
title = "Average Departure Delay vs. Wind Speed")
ggplot(data = x, mapping = aes(x = wind_speed, y = Avg_dep_delay)) + geom_point() + geom_smooth(method = "lm") +labs(x = "Wind Speed (mph)",
y="Average Departure Delay Time (minutes)",
title = "Average Departure Delay vs. Wind Speed")
flights_delayed <- filter(flights, dep_delay >0 )
flights_delayed <- flights_delayed %>%  group_by(origin, time_hour) %>% summarise(Avg_dep_delay = mean(dep_delay))
Weather_cond <- left_join(flights_delayed, wheather)
x <- Weather_cond %>% group_by(wind_gust) %>% summarise(Avg_dep_delay = mean(Avg_dep_delay))
x = x[!is.na(x$wind_gust),]
ggplot(data = x, mapping = aes(x = wind_gust, y = Avg_dep_delay)) + geom_point() + geom_smooth(method = "lm") +labs(x = "Wind Speed (mph)",
y="Average Departure Delay Time (minutes)",
title = "Average Departure Delay vs. Wind Speed")
flights_delayed <- filter(flights, dep_delay >0 )
flights_delayed <- flights_delayed %>%  group_by(origin, time_hour) %>% summarise(Avg_dep_delay = mean(dep_delay))
Weather_cond <- left_join(flights_delayed, wheather)
x <- Weather_cond %>% group_by(visib) %>% summarise(Avg_dep_delay = mean(Avg_dep_delay))
x = x[!is.na(x$visib),]
ggplot(data = x, mapping = aes(x = visib, y = Avg_dep_delay)) + geom_point() + geom_smooth(method = "lm") +labs(x = "Wind Speed (mph)",
y="Average Departure Delay Time (minutes)",
title = "Average Departure Delay vs. Wind Speed")
flights_delayed <- flights_delayed %>%  group_by(time_hour) %>% summarise(Avg_dep_delay = mean(dep_delay))
flights_delayed <- filter(flights, dep_delay >0 ) #We want to see only the delayed flights
flights_delayed <- flights_delayed %>%  group_by(time_hour) %>% summarise(Avg_dep_delay = mean(dep_delay))
Weather_cond <- left_join(flights_delayed, wheather)
x <- Weather_cond %>% group_by(visib) %>% summarise(Avg_dep_delay = mean(Avg_dep_delay))
x = x[!is.na(x$visib),]
ggplot(data = x, mapping = aes(x = visib, y = Avg_dep_delay)) + geom_point() + geom_smooth(method = "lm") +labs(x = "Wind Speed (mph)",
y="Average Departure Delay Time (minutes)",
title = "Average Departure Delay vs. Wind Speed")
flights_delayed <- filter(flights, dep_delay >0 ) #We want to see only the delayed flights
flights_delayed <- flights_delayed %>%  group_by(time_hour) %>% summarise(Avg_dep_delay = mean(dep_delay))
Weather_cond <- left_join(flights_delayed, wheather) #combine the two relevant data frames
visib_df <- Weather_cond %>% group_by(visib) %>% summarise(Avg_dep_delay = mean(Avg_dep_delay))
visib_df = visib_df[!is.na(visib_df$visib),]
ggplot(data = visib_df, mapping = aes(x = visib, y = Avg_dep_delay)) + geom_point() + geom_smooth(method = "lm") +labs(x = "Wind Speed (mph)",
y="Average Departure Delay Time (minutes)",
title = "Average Departure Delay vs. Wind Speed")
options(scipen = 999)
flights <- as.data.frame(nycflights13::flights)
wheather <- nycflights13::weather
airports <- nycflights13::airports
planes <- nycflights13::planes
flights_delayed <- filter(flights, dep_delay >0 ) #We want to see only the delayed flights
flights_delayed <- flights_delayed %>%  group_by(time_hour) %>% summarise(Avg_dep_delay = mean(dep_delay))
Weather_cond <- left_join(flights_delayed, wheather) #combine the two relevant data frames
visib_df <- Weather_cond %>% group_by(visib) %>% summarise(Avg_dep_delay = mean(Avg_dep_delay))
visib_df = visib_df[!is.na(visib_df$visib),]
ggplot(data = visib_df, mapping = aes(x = visib, y = Avg_dep_delay)) + geom_point() + geom_smooth(method = "lm") +labs(x = "Wind Speed (mph)",
y="Average Departure Delay Time (minutes)",
title = "Average Departure Delay vs. Wind Speed")
flights_delayed <- filter(flights, dep_delay >0 ) #We want to see only the delayed flights
flights_delayed <- flights_delayed %>%  group_by(time_hour) %>% summarise(Avg_dep_delay = mean(dep_delay))
Weather_cond <- left_join(flights_delayed, wheather) #combine the two relevant data frames
visib_df <- Weather_cond %>% group_by(visib) %>% summarise(Avg_dep_delay = mean(Avg_dep_delay))
visib_df = visib_df[!is.na(visib_df$visib),]
ggplot(data = visib_df, mapping = aes(x = visib, y = Avg_dep_delay)) + geom_point() + geom_smooth(method = "lm") +labs(x = "Wind Speed (mph)",
y="Average Departure Delay Time (minutes)",
title = "Average Departure Delay vs. Wind Speed")
flights_delayed <- filter(flights, dep_delay >0 ) #We want to see only the delayed flights
flights_delayed <- flights_delayed %>%  group_by(time_hour) %>% summarise(Avg_dep_delay = mean(dep_delay))
Weather_cond <- left_join(flights_delayed, wheather) #combine the two relevant data frames
visib_df <- Weather_cond %>% group_by(visib) %>% summarise(Avg_dep_delay = mean(Avg_dep_delay))
#visib_df = visib_df[!is.na(visib_df$visib),] #drop all of the NA values
ggplot(data = visib_df, mapping = aes(x = visib, y = Avg_dep_delay)) + geom_point() + geom_smooth(method = "lm") +labs(x = "Wind Speed (mph)",
y="Average Departure Delay Time (minutes)",
title = "Average Departure Delay vs. Wind Speed")
#summary(flights)
flights_con <- flights[,c(2:9, 11 ,15:19)]
flights_catgory <- flights[,c(10 ,12:15)]
catgory <- colnames(flights_catgory)
carrier <- flights_catgory %>% count(carrier)# helpful
kable(carrier, row.names = F) %>% kable_styling()
tailnum <-flights_catgory %>% count(tailnum)
kable(tailnum, row.names = F) %>% kable_styling()
origin <- flights_catgory %>% count(origin) #helpful
kable(origin, row.names = F) %>% kable_styling()
dest <- flights_catgory %>% count(dest) # need to check
kable(dest, row.names = F) %>% kable_styling()
air_time <- flights_catgory %>% count(air_time)#need to check
kable(air_time, row.names = F) %>% kable_styling()
countinuous <- colnames(flights_con)
ggplot(data = flights_con) +
geom_bar(mapping = aes(x = month))  # 2 חשוד
ggplot(data = flights_con) +
geom_bar(mapping = aes(x = day))  # 30 לחודש חשוד
ggplot(data = flights, mapping = aes(x = dep_time/100)) +
geom_histogram(binwidth = 0.25) # טיסות שממריאות בלילה ?
ggplot(data = flights, mapping = aes(x = arr_time/100)) +
geom_histogram(binwidth = 0.25)  # טיסות שמגיעות בלילה?
ggplot(data = flights, mapping = aes(x = sched_dep_time/100)) +
geom_histogram(binwidth = 0.25)
ggplot(data = flights, mapping = aes(x = dep_delay)) +
geom_histogram(binwidth = 1) + xlim(0,300)
dep_delay_over <- flights %>% filter(dep_delay > 300)
ggplot(data = flights, mapping = aes(x = arr_delay)) +
geom_histogram(binwidth = 1) + xlim(0,300)
arr_delay_over <- flights %>% filter(arr_delay > 300)
ggplot(data = flights, mapping = aes(x = sched_arr_time/100)) +
geom_histogram(binwidth = 0.25)
ggplot(data = flights, mapping = aes(x = flight)) +
geom_histogram(binwidth = 1) # מזהה טיסה
ggplot(data = flights, mapping = aes(x = distance)) +
geom_histogram(binwidth = 1) + xlim (0,2000)
long_dist <- flights %>% filter(distance > 2000)
flights_delayed <- filter(flights, dep_delay >0 ) #We want to see only the delayed flights
flights_delayed <- flights_delayed %>%  group_by(time_hour) %>% summarise(Avg_dep_delay = mean(dep_delay))
Weather_cond <- left_join(flights_delayed, wheather) #combine the two relevant data frames
visib_df <- Weather_cond %>% group_by(visib) %>% summarise(Avg_dep_delay = mean(Avg_dep_delay))
visib_df = visib_df[!is.na(visib_df$visib),] #drop all of the NA values
ggplot(data = visib_df, mapping = aes(x = visib, y = Avg_dep_delay)) + geom_point() + geom_smooth(method = "lm") +labs(x = "Wind Speed (mph)",
y="Average Departure Delay Time (minutes)",
title = "Average Departure Delay vs. Wind Speed")
visib_df
ggplot(data = visib_df, mapping = aes(x = visib, y = Avg_dep_delay)) + geom_point() +
geom_smooth(method = "lm") +
labs(x = "Wind Speed (mph)", y="Average Departure Delay Time (minutes)",
title = "Average Departure Delay vs. Wind Speed")
ggplot(data = visib_df, mapping = aes(x = visib, y = Avg_dep_delay)) + geom_point() +
geom_smooth() +
labs(x = "Wind Speed (mph)", y="Average Departure Delay Time (minutes)",
title = "Average Departure Delay vs. Wind Speed")
ggplot(data = visib_df, mapping = aes(x = visib, y = Avg_dep_delay)) + geom_point() +
geom_smooth(method = "lm") +
labs(x = "Wind Speed (mph)", y="Average Departure Delay Time (minutes)",
title = "Average Departure Delay vs. Wind Speed")
ggplot(data = visib_df, mapping = aes(x = visib, y = Avg_dep_delay)) + geom_point() +
geom_smooth(method = "lm", se = FALSE) +
labs(x = "Wind Speed (mph)", y="Average Departure Delay Time (minutes)",
title = "Average Departure Delay vs. Wind Speed")
ggplot(data = visib_df, mapping = aes(x = visib, y = Avg_dep_delay)) + geom_point() +
geom_smooth(method = "lm") +
labs(x = "Wind Speed (mph)", y="Average Departure Delay Time (minutes)",
title = "Average Departure Delay vs. Wind Speed")
ggplot(data = visib_df, mapping = aes(x = visib, y = Avg_dep_delay)) + geom_point() +
geom_smooth(method = "lm", se = FALSE) +
labs(x = "Wind Speed (mph)", y="Average Departure Delay Time (minutes)",
title = "Average Departure Delay vs. Wind Speed")
ggplot(data = visib_df, mapping = aes(x = visib, y = Avg_dep_delay, colour = class)) + geom_point() +
geom_smooth(method = "lm", se = FALSE) +
labs(x = "Wind Speed (mph)", y="Average Departure Delay Time (minutes)",
title = "Average Departure Delay vs. Wind Speed")
ggplot(data = visib_df, mapping = aes(x = visib, y = Avg_dep_delay, colour = visib)) + geom_point() +
geom_smooth(method = "lm", se = FALSE) +
labs(x = "Wind Speed (mph)", y="Average Departure Delay Time (minutes)",
title = "Average Departure Delay vs. Wind Speed")
ggplot(data = visib_df, mapping = aes(x = visib, y = Avg_dep_delay, colour = Avg_dep_delay)) + geom_point() +
geom_smooth(method = "lm", se = FALSE) +
labs(x = "Wind Speed (mph)", y="Average Departure Delay Time (minutes)",
title = "Average Departure Delay vs. Wind Speed")
options(scipen = 999)
flights <- as.data.frame(nycflights13::flights)
wheather <- nycflights13::weather
airports <- nycflights13::airports
planes <- nycflights13::planes
flights_delayed <- filter(flights, dep_delay >0 ) #We want to see only the delayed flights
flights_delayed <- flights_delayed %>%  group_by(time_hour) %>% summarise(Avg_dep_delay = mean(dep_delay))
Weather_cond <- left_join(flights_delayed, wheather) #combine the two relevant data frames
visib_df <- Weather_cond %>% group_by(visib) %>% summarise(Avg_dep_delay = mean(Avg_dep_delay))
ggplot(data = visib_df, mapping = aes(x = visib, y = Avg_dep_delay, colour = Avg_dep_delay)) + geom_point() +
geom_smooth(method = "lm", se = FALSE) +
labs(x = "Wind Speed (mph)", y="Average Departure Delay Time (minutes)",
title = "Average Departure Delay vs. Wind Speed")
View(visib_df)
flights_delayed <- filter(flights, dep_delay >0 ) #We want to see only the delayed flights
flights_delayed <- flights_delayed %>%  group_by(time_hour) %>% summarise(Avg_dep_delay = mean(dep_delay))
Weather_cond <- left_join(flights_delayed, wheather) #combine the two relevant data frames
visib_df <- Weather_cond %>% group_by(visib) %>% summarise(Avg_dep_delay = mean(Avg_dep_delay))
ggplot(data = visib_df, mapping = aes(x = visib, y = Avg_dep_delay, colour = Avg_dep_delay)) + geom_point() +
geom_smooth(method = "lm", se = FALSE) +
labs(x = "visibility", y="Average Departure Delay Time (minutes)",
title = "Average Departure Delay vs. Quality of visibility")
ggplot(data = visib_df, mapping = aes(x = visib, y = Avg_dep_delay)) + geom_point() +
geom_smooth(method = "lm", se = FALSE) +
labs(x = "visibility", y="Average Departure Delay Time (minutes)",
title = "Average Departure Delay vs. Quality of visibility")
flights_delayed
flights_delayed <- filter(flights, dep_delay >0 ) #We want to see only the delayed flights
flights_delayed
flights_delayed <- flights_delayed %>%  group_by(time_hour) %>% summarise(Avg_dep_delay = mean(dep_delay), Avg_arr_delay = mean(arr_delay))
flights_delayed
Weather_cond <- left_join(flights_delayed, wheather) #combine the two relevant data frames
visib_df <- Weather_cond %>% group_by(visib) %>% summarise(Avg_dep_delay = mean(Avg_dep_delay), Avg_arr_delay <- mean(arr_delay))
visib_df <- Weather_cond %>% group_by(visib) %>% summarise(Avg_dep_delay = mean(Avg_dep_delay), Avg_arr_delay <- mean(Avg_arr_delay))
visib_df
flights_delayed <- filter(flights, dep_delay >0 ) #We want to see only the delayed flights
flights_delayed <- flights_delayed %>%  group_by(time_hour) %>% summarise(Avg_dep_delay = mean(dep_delay), Avg_arr_delay = mean(arr_delay))
Weather_cond <- left_join(flights_delayed, wheather) #combine the two relevant data frames
visib_df <- Weather_cond %>% group_by(visib) %>% summarise(Avg_dep_delay = mean(Avg_dep_delay), Avg_arr_delay = mean(Avg_arr_delay))
visib_df
flights_delayed <- filter(flights, dep_delay >0 ) #We want to see only the delayed flights
flights_delayed <- flights_delayed %>%  group_by(time_hour) %>% summarise(Avg_dep_delay = mean(dep_delay), Avg_arr_delay = mean(arr_delay))
Weather_cond <- left_join(flights_delayed, wheather) #combine the two relevant data frames
visib_df <- Weather_cond %>% group_by(visib) %>% summarise(Avg_dep_delay = mean(Avg_dep_delay), Avg_arr_delay = mean(Avg_arr_delay))
ggplot(data = visib_df, mapping = aes(x = visib, y = Avg_dep_delay)) + geom_point() +
geom_smooth(method = "lm", se = FALSE) +
labs(x = "visibility", y="Average Departure Delay Time (minutes)",
title = "Average Departure Delay vs. Quality of visibility")
flights_delayed <- filter(flights, dep_delay >0 ) #We want to see only the delayed flights
flights_delayed
flights_delayed <- filter(flights, dep_delay >0 ) #We want to see only the delayed flights
flights_delayed <- flights_delayed %>%  group_by(time_hour) %>% summarise(Avg_dep_delay = mean(dep_delay), Avg_arr_delay = mean(arr_delay))
flights_delayed
Weather_cond <- left_join(flights_delayed, wheather) #combine the two relevant data frames
Weather_cond
View(wheather)
View(wheather)
Wheather_cond <- left_join(flights_delayed, wheather) #combine the two relevant data frames
options(scipen = 999)
flights <- as.data.frame(nycflights13::flights)
wheather <- nycflights13::weather
airports <- nycflights13::airports
planes <- nycflights13::planes
flights_delayed <- filter(flights, dep_delay >0 ) #We want to see only the delayed flights
flights_delayed <- flights_delayed %>%  group_by(time_hour) %>% summarise(Avg_dep_delay = mean(dep_delay), Avg_arr_delay = mean(arr_delay))
Wheather_cond <- left_join(flights_delayed, wheather) #combine the two relevant data frames
visib_df <- Wheather_cond %>% group_by(visib) %>% summarise(Avg_dep_delay = mean(Avg_dep_delay), Avg_arr_delay = mean(Avg_arr_delay))
ggplot(data = visib_df, mapping = aes(x = visib, y = Avg_dep_delay)) + geom_point() +
geom_smooth(method = "lm", se = FALSE) +
labs(x = "visibility", y="Average Departure Delay Time (minutes)",
title = "Average Departure Delay vs. Quality of visibility")
visib_df
View(visib_df)
View(Wheather_cond)
View(flights_delayed)
flights_delayed <- filter(flights, dep_delay >0 ) #We want to see only the delayed flights
flights_delayed <- flights_delayed %>%  group_by(time_hour) %>% summarise(Avg_dep_delay = mean(dep_delay))
Wheather_cond <- left_join(flights_delayed, wheather) #combine the two relevant data frames
visib_df <- Wheather_cond %>% group_by(visib) %>% summarise(Avg_dep_delay = mean(Avg_dep_delay))
ggplot(data = visib_df, mapping = aes(x = visib, y = Avg_dep_delay)) + geom_point() +
geom_smooth(method = "lm", se = FALSE) +
labs(x = "visibility", y="Average Departure Delay Time (minutes)",
title = "Average Departure Delay vs. Quality of visibility")
visib_df
ggplot(data = visib_df, mapping = aes(x = visib, y = Avg_dep_delay)) + geom_point() +
geom_smooth(method = "lm", se = FALSE) +
labs(x = "visibility", y="Average Departure Delay Time (minutes)",
title = "Average Departure Delay vs. Quality of visibility")
ggplot(data = visib_df, mapping = aes(x = visib, y = Avg_dep_delay)) + geom_point() +
geom_smooth(method = "lm") +
labs(x = "visibility", y="Average Departure Delay Time (minutes)",
title = "Average Departure Delay vs. Quality of visibility")
ggplot(data = Wheather_cond, mapping = aes(x = visib, y = Avg_dep_delay)) + geom_point() +
geom_smooth(method = "lm") +
labs(x = "visibility", y="Average Departure Delay Time (minutes)",
title = "Average Departure Delay vs. Quality of visibility")
ggplot(data = visib_df, mapping = aes(x = visib, y = Avg_dep_delay)) + geom_point() +
geom_smooth(method = "lm") +
labs(x = "visibility", y="Average Departure Delay Time (minutes)",
title = "Average Departure Delay vs. Quality of visibility")
Wheather_cond
ggplot(Wheather_cond, mapping = aes(x = visib, y = Avg_dep_delay)) + geom_boxplot()
ggplot(Wheather_cond, mapping = aes(x = visib, y = Avg_dep_delay)) + geom_boxplot(mapping = aes(group = cut_width(visib, 0.1)))
ggplot(Wheather_cond, mapping = aes(x = visib, y = Avg_dep_delay)) + geom_boxplot(mapping = aes(group = cut_width(visib, 1)))
ggplot(data = visib_df, mapping = aes(x = visib, y = Avg_dep_delay)) + geom_point() +
geom_smooth(method = "lm") +
labs(x = "visibility", y="Average Departure Delay Time (minutes)",
title = "Average Departure Delay vs. Quality of visibility")
ggplot(data = visib_df, mapping = aes(x = visib, y = Avg_dep_delay)) + geom_point() +
geom_smooth(method = "lm", fill = "blue") +
labs(x = "visibility", y="Average Departure Delay Time (minutes)",
title = "Average Departure Delay vs. Quality of visibility")
ggplot(data = visib_df, mapping = aes(x = visib, y = Avg_dep_delay)) + geom_point() +
geom_smooth(method = "lm", fill = "cadetblue1") +
labs(x = "visibility", y="Average Departure Delay Time (minutes)",
title = "Average Departure Delay vs. Quality of visibility")
ggplot(data = visib_df, mapping = aes(x = visib, y = Avg_dep_delay)) + geom_point() +
geom_smooth(method = "lm", fill = "lemonchiffon") +
labs(x = "visibility", y="Average Departure Delay Time (minutes)",
title = "Average Departure Delay vs. Quality of visibility")
ggplot(data = visib_df, mapping = aes(x = visib, y = Avg_dep_delay)) + geom_point() +
geom_smooth(method = "lm", fill = "lightskyblue") +
labs(x = "visibility", y="Average Departure Delay Time (minutes)",
title = "Average Departure Delay vs. Quality of visibility")
ggplot(data = visib_df, mapping = aes(x = visib, y = Avg_dep_delay)) + geom_point() +
geom_smooth(method = "lm", fill = "seagreen1") +
labs(x = "visibility", y="Average Departure Delay Time (minutes)",
title = "Average Departure Delay vs. Quality of visibility")
ggplot(data = visib_df, mapping = aes(x = visib, y = Avg_dep_delay)) + geom_point() +
geom_smooth(method = "lm", fill = "seagreen1", color = "seagreen4") +
labs(x = "visibility", y="Average Departure Delay Time (minutes)",
title = "Average Departure Delay vs. Quality of visibility")
ggplot(data = visib_df, mapping = aes(x = visib, y = Avg_dep_delay)) + geom_point() +
geom_smooth(method = "lm", fill = "seagreen1", color = "violetred4") +
labs(x = "visibility", y="Average Departure Delay Time (minutes)",
title = "Average Departure Delay vs. Quality of visibility")
ggplot(data = visib_df, mapping = aes(x = visib, y = Avg_dep_delay)) + geom_point() +
geom_smooth(method = "lm", fill = "violet", color = "violetred4") +
labs(x = "visibility", y="Average Departure Delay Time (minutes)",
title = "Average Departure Delay vs. Quality of visibility")
ggplot(data = visib_df, mapping = aes(x = visib, y = Avg_dep_delay)) + geom_point(color = "r") +
geom_smooth(method = "lm", fill = "violet", color = "violetred4") +
labs(x = "visibility", y="Average Departure Delay Time (minutes)",
title = "Average Departure Delay vs. Quality of visibility")
ggplot(data = visib_df, mapping = aes(x = visib, y = Avg_dep_delay)) + geom_point(color = "b") +
geom_smooth(method = "lm", fill = "violet", color = "violetred4") +
labs(x = "visibility", y="Average Departure Delay Time (minutes)",
title = "Average Departure Delay vs. Quality of visibility")
ggplot(data = visib_df, mapping = aes(x = visib, y = Avg_dep_delay)) + geom_point(color = "slateblue") +
geom_smooth(method = "lm", fill = "violet", color = "violetred4") +
labs(x = "visibility", y="Average Departure Delay Time (minutes)",
title = "Average Departure Delay vs. Quality of visibility")
ggplot(data = visib_df, mapping = aes(x = visib, y = Avg_dep_delay)) + geom_point(color = "violetred4") +
geom_smooth(method = "lm", fill = "violet", color = "violetred4") +
labs(x = "visibility", y="Average Departure Delay Time (minutes)",
title = "Average Departure Delay vs. Quality of visibility")
ggplot(data = visib_df, mapping = aes(x = visib, y = Avg_dep_delay^2)) + geom_point(color = "violetred4") +
geom_smooth(method = "lm", fill = "violet", color = "violetred4") +
labs(x = "visibility", y="Average Departure Delay Time (minutes)",
title = "Average Departure Delay vs. Quality of visibility")
ggplot(data = visib_df, mapping = aes(x = visib, y = log(Avg_dep_delay))) + geom_point(color = "violetred4") +
geom_smooth(method = "lm", fill = "violet", color = "violetred4") +
labs(x = "visibility", y="Average Departure Delay Time (minutes)",
title = "Average Departure Delay vs. Quality of visibility")
ggplot(data = visib_df, mapping = aes(x = visib, y = Avg_dep_delay)) + geom_point(color = "violetred4") +
geom_smooth(method = "lm", fill = "violet", color = "violetred4") +
labs(x = "visibility", y="Average Departure Delay Time (minutes)",
title = "Average Departure Delay vs. Quality of visibility")
ggplot(data = Wheather_cond, mapping = aes(x = visib, y = Avg_dep_delay)) + geom_point(color = "violetred4")
ggplot(data = Wheather_cond, mapping = aes(x = visib, y = Avg_dep_delay)) + geom_point(color = "violetred4") + geom_jitter(aes(colour = cyl))
ggplot(data = Wheather_cond, mapping = aes(x = visib, y = Avg_dep_delay)) + geom_point(color = "violetred4") + geom_jitter()
ggplot(data = Wheather_cond, mapping = aes(x = visib, y = Avg_dep_delay)) + geom_point(color = "violetred4")
ggplot(data = Wheather_cond, mapping = aes(x = visib, y = Avg_dep_delay)) + geom_point(color = "violetred4") +geom_jitter
ggplot(data = Wheather_cond, mapping = aes(x = visib, y = Avg_dep_delay)) + geom_point(color = "violetred4") +geom_jitter()
ggplot(data = Wheather_cond, mapping = aes(x = visib, y = Avg_dep_delay)) + geom_point(color = "violetred4") +geom_jitter(visib)
ggplot(data = Wheather_cond, mapping = aes(x = visib, y = Avg_dep_delay)) + geom_point(color = "violetred4") +geom_jitter(rep(1, length(visib)))
ggplot(data = Wheather_cond, mapping = aes(x = visib, y = Avg_dep_delay)) + geom_point(color = "violetred4") +geom_jitter(rep(1, length(visib)))
flights_delayed <- filter(flights, dep_delay >0 ) #We want to see only the delayed flights
flights_delayed <- flights_delayed %>%  group_by(time_hour) %>% summarise(Avg_dep_delay = mean(dep_delay))
Wheather_cond <- left_join(flights_delayed, wheather) #combine the two relevant data frames
visib_df <- Wheather_cond %>% group_by(visib) %>% summarise(Avg_dep_delay = mean(Avg_dep_delay))
ggplot(data = Wheather_cond, mapping = aes(x = visib, y = Avg_dep_delay)) + geom_point(color = "violetred4") +geom_jitter(rep(1, length(visib)))
Wheather_cond
ggplot(data = Wheather_cond, mapping = aes(x = visib, y = Avg_dep_delay)) + geom_point(color = "violetred4")
ggplot(data = Wheather_cond, mapping = aes(x = visib, y = Avg_dep_delay)) + geom_point(color = "violetred4") + geom_jitter(mapping = aes(x = visib, y = Avg_dep_delay))
ggplot(data = visib_df, mapping = aes(x = visib, y = Avg_dep_delay)) + geom_point(color = "violetred4") +
geom_smooth(method = "lm", fill = "violet", color = "violetred4") +
labs(x = "visibility", y="Average Departure Delay Time (minutes)",
title = "Average Departure Delay vs. Quality of visibility")
# tools and data upload
library(ggplot2)
library(dplyr)
library(scales) # needed for formatting y-axis labels to non-scientific type
library(tidyr)
library(tidyverse)
library(ggthemes)
library(datasets)
library(nycflights13)
library(kableExtra) #table styling
library(e1071) # kurtosis and skeeness
library(MASS) # reg modeling
library(corrplot)
library(caTools)
library(plotly)
library(lubridate)
library(hexbin)
options(scipen = 999)
flights <- as.data.frame(nycflights13::flights)
wheather <- nycflights13::weather
airports <- nycflights13::airports
planes <- nycflights13::planes
#summary(flights)
flights_con <- flights[,c(2:9, 11 ,15:19)]
flights_catgory <- flights[,c(10 ,12:15)]
catgory <- colnames(flights_catgory)
carrier <- flights_catgory %>% count(carrier)# helpful
kable(carrier, row.names = F) %>% kable_styling()
tailnum <-flights_catgory %>% count(tailnum)
kable(tailnum, row.names = F) %>% kable_styling()
origin <- flights_catgory %>% count(origin) #helpful
kable(origin, row.names = F) %>% kable_styling()
dest <- flights_catgory %>% count(dest) # need to check
kable(dest, row.names = F) %>% kable_styling()
air_time <- flights_catgory %>% count(air_time)#need to check
kable(air_time, row.names = F) %>% kable_styling()
countinuous <- colnames(flights_con)
ggplot(data = flights_con) +
geom_bar(mapping = aes(x = month))  # 2 חשוד
ggplot(data = flights_con) +
geom_bar(mapping = aes(x = day))  # 30 לחודש חשוד
ggplot(data = flights, mapping = aes(x = dep_time/100)) +
geom_histogram(binwidth = 0.25) # טיסות שממריאות בלילה ?
ggplot(data = flights, mapping = aes(x = arr_time/100)) +
geom_histogram(binwidth = 0.25)  # טיסות שמגיעות בלילה?
ggplot(data = flights, mapping = aes(x = sched_dep_time/100)) +
geom_histogram(binwidth = 0.25)
ggplot(data = flights, mapping = aes(x = dep_delay)) +
geom_histogram(binwidth = 1) + xlim(0,300)
dep_delay_over <- flights %>% filter(dep_delay > 300)
ggplot(data = flights, mapping = aes(x = arr_delay)) +
geom_histogram(binwidth = 1) + xlim(0,300)
arr_delay_over <- flights %>% filter(arr_delay > 300)
ggplot(data = flights, mapping = aes(x = sched_arr_time/100)) +
geom_histogram(binwidth = 0.25)
ggplot(data = flights, mapping = aes(x = flight)) +
geom_histogram(binwidth = 1) # מזהה טיסה
ggplot(data = flights, mapping = aes(x = distance)) +
geom_histogram(binwidth = 1) + xlim (0,2000)
long_dist <- flights %>% filter(distance > 2000)
#EWR/ LGA/ JFK to choose
week_cycles <- as.data.frame(flights) %>% filter(origin == 'EWR') %>% dplyr::select(time_hour ,dep_delay ,sched_dep_time)
week_cycles$time_hour <- as.Date(week_cycles$time_hour)
week_cycles<- week_cycles %>% mutate(delay = if_else(dep_delay <= 15 ,0,1,0))
week_cycles_freq <- week_cycles %>% group_by(time_hour) %>% summarise(frequency = n())
week_cycles_delay <- week_cycles %>% group_by(time_hour) %>% summarise(sum(delay))
l <- length(week_cycles_freq$frequency)
week_cycles_min <- week_cycles_freq[c(2:(l-1)),]
week_cycles_min <- week_cycles_min %>% mutate(local_min = (week_cycles_min$frequency == runmin(week_cycles_min$frequency,length(week_cycles_min$frequency)/2)))
week_cycles_min <- week_cycles_min %>% filter(local_min == T) %>% filter(frequency < 250)
ggplot(data = week_cycles_freq,aes(x = time_hour,
y= week_cycles_freq$frequency,colour = "blue")) +
geom_point() + geom_line(aes(color = "blue")) +
geom_point(data = week_cycles_delay,aes(x=time_hour,y= `sum(delay)`), color ='red') +
geom_linerange(data = week_cycles_delay,aes(x= time_hour, ymax =`sum(delay)` ,ymin=0,color = 'red')) +
geom_point(data = week_cycles_min,aes(x=time_hour,y=week_cycles_min$frequency,
color = "lightblue"),size = 7)+
scale_color_identity(name ="" ,breaks = c("blue","red","lightblue"),
labels = c("All Flights (scheculed for departure)",
"Late Flights (departure delayed >15)", "Fewer flights"),
guide =  guide_legend(override.aes = list(linetype = c(1, 1, 0),
shape = c(NA,NA,16),
size = c(1,1,7)))) +
theme_light()  +
xlab("Date")+ ylab("Flights per day") +
theme(legend.position="top",legend.direction = "vertical") +
ggtitle(label = "Weekly Cycles", subtitle = "the airport, we need to choose, Year = 2013") +
theme(plot.title = element_text(hjust = 0.5,size = 20),plot.subtitle = element_text(hjust = 0.5,size = 15))
dep_delay <- as.data.frame(flights) %>% filter(origin == 'EWR') %>%
mutate(delay = if_else(dep_delay <= 15 ,0,1,0)) %>% group_by(faa = dest) %>% summarise(amount = (frequency = n()), dep = sum(delay)) %>% mutate(per = dep/amount)
dep_delay_loc <- dep_delay %>% left_join(airports, by = "faa") %>% drop_na()
# removed : STT,SJU, BQN need to be explain why they can be found.
dep_delay_loc <- dep_delay_loc %>% mutate(per_ch = NA)
dep_delay_loc$per_ch[dep_delay_loc$per <= 0.10 ] <- "<= 10%"
dep_delay_loc$per_ch[dep_delay_loc$per <= 0.15 & dep_delay_loc$per > 0.10 ] <- "10% - 15%"
dep_delay_loc$per_ch[dep_delay_loc$per <= 0.20 & dep_delay_loc$per > 0.15 ] <- "15% - 20%"
dep_delay_loc$per_ch[dep_delay_loc$per <= 0.25 & dep_delay_loc$per > 0.20 ] <- "20% - 25%"
dep_delay_loc$per_ch[dep_delay_loc$per >= 0.25] <- "25% <="
geo <- list(
scope = "north america",
projection = list(type = "albers usa"),
landcolor = toRGB("gray95"), showlegend = FALSE,
countrycolor = toRGB("gray80"))
fig <- plot_geo(locationmode ="world", color = ~per_ch)
fig <- fig %>% add_markers(
data = dep_delay_loc, x = ~lon, y = ~lat, text = ~name,
showlegend = FALSE)
fig <- fig %>% add_segments(
data = dep_delay_loc,
x =-74.16867, xend = ~lon,
y = 40.6925, yend = ~lat,  size = I(1),text = ~name, hoverinfo = "text")
fig <- fig %>% layout(
title = list(text= '<b>% of Flight Departures Delayed > 15 Min</b><br>Airport = EWR    Year = 2013'),
geo = geo, height=500)
fig <- fig %>% layout(legend = list(x = 0.1, y = -0.4))  %>%
layout(legend=list(title=list(text='<b> Percent range </b>')))
fig
plot(pressure)
flights_delayed <- filter(flights, dep_delay >0 ) #We want to see only the delayed flights
flights_delayed <- flights_delayed %>%  group_by(time_hour) %>% summarise(Avg_dep_delay = mean(dep_delay))
Wheather_cond <- left_join(flights_delayed, wheather) #combine the two relevant data frames
visib_df <- Wheather_cond %>% group_by(visib) %>% summarise(Avg_dep_delay = mean(Avg_dep_delay))
ggplot(data = visib_df, mapping = aes(x = visib, y = Avg_dep_delay)) + geom_point(color = "violetred4") +
geom_smooth(method = "lm", fill = "violet", color = "violetred4") +
labs(x = "visibility", y="Average Departure Delay Time (minutes)",
title = "Average Departure Delay vs. Quality of visibility")
