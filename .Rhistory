# tools and data upload
library(ggplot2)
library(dplyr)
library(scales)   # needed for formatting y-axis labels to non-scientific type
library(tidyr)
library(tidyverse)
library(ggthemes)
library(datasets)
library(nycflights13)
library(kableExtra) #table styling
library(e1071) # kurtosis and skeeness
library(MASS) # reg modeling
library(corrplot)
options(scipen = 999)
flights <- as.data.frame(nycflights13::flights)
wheather <- nycflights13::weather
airports <- nycflights13::airports
planes <- nycflights13::planes
summary(flights)
filghts_con <- flights[,c(1:9, 11 ,15:19)]
flights_catgory <- flights[,c(10 ,12:15)]
catgory <- colnames(flights_catgory)
carrier <- flights_catgory %>% count(carrier)# helpful
kable(carrier, row.names = F) %>% kable_styling()
tailnum <-flights_catgory %>% count(tailnum)
kable(tailnum, row.names = F) %>% kable_styling()
origin <- flights_catgory %>% count(origin) #helpful
kable(origin, row.names = F) %>% kable_styling()
dest <- flights_catgory %>% count(dest) # need to check
kable(dest, row.names = F) %>% kable_styling()
air_time <- flights_catgory %>% count(air_time)#need to check
kable(air_time, row.names = F) %>% kable_styling()
for(c in countinuous){
con_plot[[c]] <- filghts_con %>% ggplot() + geom_histogram(mapping = aes(c),binwidth = 0.5)
print(con_plot[[c]])
}
countinuous <- colnames(filghts_con)
for(c in countinuous){
con_plot[[c]] <- filghts_con %>% ggplot() + geom_histogram(mapping = aes(c),binwidth = 0.5)
print(con_plot[[c]])
}
con_plot <- NULL
for(c in countinuous){
con_plot[[c]] <- filghts_con %>% ggplot() + geom_histogram(mapping = aes(c),binwidth = 0.5)
print(con_plot[[c]])
}
countinuous <- colnames(filghts_con)
con_plot <- NULL
for(c in length(countinuous)){
con_plot[[c]] <- filghts_con %>% ggplot() + geom_histogram(mapping = aes(countinuous[c]),binwidth = 0.5)
print(con_plot[[c]])
}
filghts_con %>% ggplot() + geom_histogram(mapping = aes("month"),binwidth = 0.5)
ggplot(data = filghts_con) + geom_histogram(mapping = aes("month"),binwidth = 0.5)
ggplot(data = filghts_con) + geom_histogram(mapping = aes(x = "month"),binwidth = 0.5)
ggplot(data = filghts_con,mapping = aes(x = "month")) + geom_histogram(binwidth = 0.5)
ggplot(data = filghts_con, mapping = aes(x = "month")) + geom_count()
countinuous
ggplot(data = flights_con) +
geom_bar(mapping = aes(x = month))
summary(flights)
flights_con <- flights[,c(2:9, 11 ,15:19)]
flights_catgory <- flights[,c(10 ,12:15)]
catgory <- colnames(flights_catgory)
carrier <- flights_catgory %>% count(carrier)# helpful
kable(carrier, row.names = F) %>% kable_styling()
tailnum <-flights_catgory %>% count(tailnum)
kable(tailnum, row.names = F) %>% kable_styling()
origin <- flights_catgory %>% count(origin) #helpful
kable(origin, row.names = F) %>% kable_styling()
dest <- flights_catgory %>% count(dest) # need to check
kable(dest, row.names = F) %>% kable_styling()
air_time <- flights_catgory %>% count(air_time)#need to check
kable(air_time, row.names = F) %>% kable_styling()
countinuous <- colnames(flights_con)
ggplot(data = flights_con) +
geom_bar(mapping = aes(x = month))
ggplot(data = flights_con) +
geom_bar(mapping = aes(x = month))
ggplot(data = flights, mapping = aes(x = dep_time)) +
geom_freqpoly(binwidth = 0.1)
ggplot(data = flights_con) +
geom_bar(mapping = aes(x = day))
ggplot(data = flights_con) +
geom_bar(mapping = aes(x = month))
ggplot(data = flights_con) +
geom_bar(mapping = aes(x = day))
ggplot(data = flights, mapping = aes(x = dep_time)) +
geom_freqpoly(binwidth = 0.1)
ggplot(data = flights, mapping = aes(x = dep_time)) +
geom_freqpoly(binwidth = 15)
ggplot(data = flights, mapping = aes(x = dep_time/100)) +
geom_freqpoly(binwidth = 0.25)
ggplot(data = flights, mapping = aes(x = dep_time/100)) +
geom_histogram(binwidth = 0.25)
ggplot(data = flights, mapping = aes(x = dep_time/100)) +
geom_histogram(binwidth = 0.25)
ggplot(data = flights, mapping = aes(x = arr_time/100)) +
geom_histogram(binwidth = 0.25)
ggplot(data = flights, mapping = aes(x = sched_dep_time)) +
geom_freqpoly(binwidth = 0.1)
ggplot(data = flights, mapping = aes(x = sched_dep_time/100)) +
geom_histogram(binwidth = 0.25)
ggplot(data = flights, mapping = aes(x = dep_delay)) +
geom_histogram(binwidth = 0.25)
ggplot(data = flights, mapping = aes(x = dep_delay)) +
geom_histogram(binwidth = 1)
ggplot(data = flights, mapping = aes(x = dep_delay)) +
geom_histogram(binwidth = 1) + xlim(0,60)
dep_delay_over <- flights %>% filter(dep_delay > 100)
ggplot(data = flights, mapping = aes(x = dep_delay)) +
geom_histogram(binwidth = 1) + xlim(0,100)
dep_delay_over <- flights %>% filter(dep_delay > 300)
ggplot(data = flights, mapping = aes(x = dep_delay)) +
geom_histogram(binwidth = 1) + xlim(0,300)
ggplot(data = flights, mapping = aes(x = arr_delay)) +
geom_histogram(binwidth = 1) + xlim(0,300)
arr_delay_over <- flights %>% filter(arr_delay > 300)
ggplot(data = flights, mapping = aes(x = sched_arr_time)) +
geom_freqpoly(binwidth = 0.1)
ggplot(data = flights, mapping = aes(x = sched_arr_time/100)) +
geom_histogram(binwidth = 0.25)
ggplot(data = flights, mapping = aes(x = flight)) +
geom_histogram(binwidth = 1)
ggplot(data = flights, mapping = aes(x = distance)) +
geom_histogram(binwidth = 1)
ggplot(data = flights, mapping = aes(x = distance)) +
geom_histogram(binwidth = 1) + xlim (0,3000)
ggplot(data = flights, mapping = aes(x = distance)) +
geom_histogram(binwidth = 1) + xlim (0,2000)
long_dist <- flights %>% filter(distance > 2000)
View(long_dist)
colnames(flights)
week_cycles <- flights %>% filter(time_hour ,dep_delay ,sched_dep_time)
# tools and data upload
library(ggplot2)
library(dplyr)
library(scales)   # needed for formatting y-axis labels to non-scientific type
library(tidyr)
library(tidyverse)
library(ggthemes)
library(datasets)
library(nycflights13)
library(kableExtra) #table styling
library(e1071) # kurtosis and skeeness
library(MASS) # reg modeling
library(corrplot)
options(scipen = 999)
flights <- as.data.frame(nycflights13::flights)
wheather <- nycflights13::weather
airports <- nycflights13::airports
planes <- nycflights13::planes
summary(flights)
flights_con <- flights[,c(2:9, 11 ,15:19)]
flights_catgory <- flights[,c(10 ,12:15)]
catgory <- colnames(flights_catgory)
carrier <- flights_catgory %>% count(carrier)# helpful
kable(carrier, row.names = F) %>% kable_styling()
tailnum <-flights_catgory %>% count(tailnum)
kable(tailnum, row.names = F) %>% kable_styling()
origin <- flights_catgory %>% count(origin) #helpful
kable(origin, row.names = F) %>% kable_styling()
dest <- flights_catgory %>% count(dest) # need to check
kable(dest, row.names = F) %>% kable_styling()
air_time <- flights_catgory %>% count(air_time)#need to check
kable(air_time, row.names = F) %>% kable_styling()
countinuous <- colnames(flights_con)
ggplot(data = flights_con) +
geom_bar(mapping = aes(x = month))  # 2 חשוד
ggplot(data = flights_con) +
geom_bar(mapping = aes(x = day))  # 30 לחודש חשוד
ggplot(data = flights, mapping = aes(x = dep_time/100)) +
geom_histogram(binwidth = 0.25) # טיסות שממריאות בלילה ?
ggplot(data = flights, mapping = aes(x = arr_time/100)) +
geom_histogram(binwidth = 0.25)  # טיסות שמגיעות בלילה?
ggplot(data = flights, mapping = aes(x = sched_dep_time/100)) +
geom_histogram(binwidth = 0.25)
ggplot(data = flights, mapping = aes(x = dep_delay)) +
geom_histogram(binwidth = 1) + xlim(0,300)
dep_delay_over <- flights %>% filter(dep_delay > 300)
ggplot(data = flights, mapping = aes(x = arr_delay)) +
geom_histogram(binwidth = 1) + xlim(0,300)
arr_delay_over <- flights %>% filter(arr_delay > 300)
ggplot(data = flights, mapping = aes(x = sched_arr_time/100)) +
geom_histogram(binwidth = 0.25)
ggplot(data = flights, mapping = aes(x = flight)) +
geom_histogram(binwidth = 1) # מזהה טיסה
ggplot(data = flights, mapping = aes(x = distance)) +
geom_histogram(binwidth = 1) + xlim (0,2000)
long_dist <- flights %>% filter(distance > 2000)
week_cycles <- flights %>% filter(time_hour ,dep_delay ,sched_dep_time)
week_cycles <- flights %>% filter([time_hour ,dep_delay ,sched_dep_time])
week_cycles <- flights %>% filter((time_hour ,dep_delay ,sched_dep_time))
?filter
week_cycles <- flights %>% select(time_hour ,dep_delay ,sched_dep_time)
week_cycles <- flights %>% select(time_hour ,dep_delay ,sched_dep_time)
week_cycles <- flights %>% select(flights$time_hour ,flights$dep_delay ,flights$sched_dep_time)
# tools and data upload
library(ggplot2)
library(dplyr)
library(scales)   # needed for formatting y-axis labels to non-scientific type
library(tidyr)
library(tidyverse)
library(ggthemes)
library(datasets)
library(nycflights13)
library(kableExtra) #table styling
library(e1071) # kurtosis and skeeness
library(MASS) # reg modeling
library(corrplot)
library(caTools)
library(plotly)
options(scipen = 999)
flights <- as.data.frame(nycflights13::flights)
wheather <- nycflights13::weather
airports <- nycflights13::airports
planes <- nycflights13::planes
summary(flights)
flights_con <- flights[,c(2:9, 11 ,15:19)]
flights_catgory <- flights[,c(10 ,12:15)]
catgory <- colnames(flights_catgory)
carrier <- flights_catgory %>% count(carrier)# helpful
kable(carrier, row.names = F) %>% kable_styling()
tailnum <-flights_catgory %>% count(tailnum)
kable(tailnum, row.names = F) %>% kable_styling()
origin <- flights_catgory %>% count(origin) #helpful
kable(origin, row.names = F) %>% kable_styling()
dest <- flights_catgory %>% count(dest) # need to check
kable(dest, row.names = F) %>% kable_styling()
air_time <- flights_catgory %>% count(air_time)#need to check
kable(air_time, row.names = F) %>% kable_styling()
countinuous <- colnames(flights_con)
ggplot(data = flights_con) +
geom_bar(mapping = aes(x = month))  # 2 חשוד
ggplot(data = flights_con) +
geom_bar(mapping = aes(x = day))  # 30 לחודש חשוד
ggplot(data = flights, mapping = aes(x = dep_time/100)) +
geom_histogram(binwidth = 0.25) # טיסות שממריאות בלילה ?
ggplot(data = flights, mapping = aes(x = arr_time/100)) +
geom_histogram(binwidth = 0.25)  # טיסות שמגיעות בלילה?
ggplot(data = flights, mapping = aes(x = sched_dep_time/100)) +
geom_histogram(binwidth = 0.25)
ggplot(data = flights, mapping = aes(x = dep_delay)) +
geom_histogram(binwidth = 1) + xlim(0,300)
dep_delay_over <- flights %>% filter(dep_delay > 300)
ggplot(data = flights, mapping = aes(x = arr_delay)) +
geom_histogram(binwidth = 1) + xlim(0,300)
arr_delay_over <- flights %>% filter(arr_delay > 300)
ggplot(data = flights, mapping = aes(x = sched_arr_time/100)) +
geom_histogram(binwidth = 0.25)
ggplot(data = flights, mapping = aes(x = flight)) +
geom_histogram(binwidth = 1) # מזהה טיסה
ggplot(data = flights, mapping = aes(x = distance)) +
geom_histogram(binwidth = 1) + xlim (0,2000)
long_dist <- flights %>% filter(distance > 2000)
#EWR/ LGA/ JFK to choose
week_cycles <- as.data.frame(flights) %>% filter(origin == 'EWR') %>% dplyr::select(time_hour ,dep_delay ,sched_dep_time)
week_cycles$time_hour <- as.Date(week_cycles$time_hour)
week_cycles<- week_cycles %>% mutate(delay = if_else(dep_delay <= 15 ,0,1,0))
week_cycles_freq <- week_cycles %>% group_by(time_hour) %>% summarise(frequency = n())
week_cycles_delay <- week_cycles %>% group_by(time_hour) %>% summarise(sum(delay))
week_cycles_min <- week_cycles_freq %>% mutate(local_min = (week_cycles_freq$frequency == runmin(week_cycles_freq$frequency,length(week_cycles_freq$frequency)/2)))
week_cycles_min <- week_cycles_min %>% filter(local_min == T)
ggplot(data = week_cycles_freq,aes(x = time_hour,
y= week_cycles_freq$frequency,colour = "blue")) +
geom_point(aes(color = "blue")) + geom_line(color = "blue") +
geom_point(data = week_cycles_delay,aes(x=time_hour,y= `sum(delay)`, color ='red')) +
geom_linerange(data = week_cycles_delay,aes(x= time_hour, ymax =`sum(delay)` ,ymin=0),color = 'red') +
scale_color_identity(name ="" ,breaks = c("blue","red"),
labels = c("All Flights (scheculed for departure)",
"Late Flights (departure delayed >15)"),
guide = "legend") +
theme_light()  +
xlab("Date")+ ylab("Flights per day") +
theme(legend.position="top",legend.direction = "vertical") +
ggtitle(label = "Weekly Cycles", subtitle = "the airport, we need to choose, Year = 2013") +
theme(plot.title = element_text(hjust = 0.5,size = 20),plot.subtitle = element_text(hjust = 0.5,size = 15))
#need to takecare in the point of the locl minmun
dep_delay <- as.data.frame(flights) %>% filter(origin == 'EWR') %>%
mutate(delay = if_else(dep_delay <= 15 ,0,1,0)) %>% group_by(faa = dest) %>% summarise(amount = (frequency = n()), dep = sum(delay)) %>% mutate(per = dep/amount)
dep_delay_loc <- dep_delay %>% left_join(airports, by = "faa") %>% drop_na()
# removed : STT,SJU, BQN need to be explain why they can be found.
dep_delay_loc$ <- dep_delay_loc %>% mutate(perc = if_else(per <= 0.10 ,"<= 10%",0,0))
