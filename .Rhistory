geom_linerange(data = week_cycles_delay,aes(x= time_hour, ymax =`sum(delay)` ,ymin=0),color = 'red') +
geom_point(data = week_cycles_min,aes(x=time_hour,y=week_cycles_min$frequency, color = "royalblue2"),size = 7)+
scale_color_identity(name ="" ,breaks = c("blue","red"),
labels = c("All Flights (scheculed for departure)",
"Late Flights (departure delayed >15)"),
guide =  guide_legend(override.aes = list(linetype = c(1, 1), shape =                                                        c(16,16),size = c(1,1),
legend.text=element_text(size=12,
face = "bold"))))+
theme_light()  +
xlab("")+ ylab("Flights  \n per day") +
xlim(as.Date(c("2013-01-01","2014-01-01")))+  ylim(c(0, 400)) +
theme(axis.title.y = element_text(angle = 0, vjust = 1.1, hjust = 10)) +
scale_x_date(date_labels = "%d%b%Y", date_breaks = "1 month",expand = c(0,0)) +
theme(legend.position="top",legend.direction = "vertical") +
ggtitle(label = "Weekly Cycles", subtitle = "the airport = EWR   Year = 2013") +
theme(plot.title = element_text(hjust = 0.5,size = 20),
plot.subtitle = element_text(hjust = 0.5,size = 15))
d <- get_legend(p + scale_color_identity(name ="\n\n WEEKLY CYCLES  \n FEW FLIGHTS: \n SUNDAYS AND SATURDAYS \n MOST FLIGHTS: \n  MONDAYS, THURSDAYS \n AND FRIDAYS" ,
breaks = c("royalblue2"), labels = c("Fewer flights on holidays"),
guide =  guide_legend(override.aes = list(linetype = c(0), shape =                                                        c(16),size = c(7)))) +
theme(legend.text=element_text(size=12, face = "bold"),
legend.title=element_text(size=12, face = "bold")))
grid.arrange(d, p, layout_matrix = matrix(c(1,2,2, 2, 2), ncol = 5),
top = textGrob("   TEMPORAL EFFECTS",
gp=gpar(fontsize=45, col = "royalblue2", fontface = 2)))
#EWR/ LGA/ JFK to choose
week_cycles <- as.data.frame(flights) %>% filter(origin == 'EWR') %>% dplyr::select(time_hour ,dep_delay ,sched_dep_time)
week_cycles$time_hour <- as.Date(week_cycles$time_hour,'ddmmmyyyy')
week_cycles<- week_cycles %>% mutate(delay = if_else(dep_delay <= 15 ,0,1,0))
week_cycles_freq <- week_cycles %>% group_by(time_hour) %>% summarise(frequency = n())
week_cycles_delay <- week_cycles %>% group_by(time_hour) %>% summarise(sum(delay))
l <- length(week_cycles_freq$frequency)
week_cycles_min <- week_cycles_freq[c(2:(l-1)),]
week_cycles_min <- week_cycles_min %>% mutate(local_min = (week_cycles_min$frequency == runmin(week_cycles_min$frequency,length(week_cycles_min$frequency)/1.3)))
week_cycles_min <- week_cycles_min %>% filter(local_min == T) %>% filter(frequency < 250)
p <- ggplot(data = week_cycles_freq,aes(x = time_hour,
y= week_cycles_freq$frequency,colour = "blue")) +
geom_point() + geom_line(aes(color = "blue")) +
geom_point(data = week_cycles_delay,aes(x=time_hour,y= `sum(delay)`, color ='red')) +
geom_linerange(data = week_cycles_delay,aes(x= time_hour, ymax =`sum(delay)` ,ymin=0),color = 'red') +
geom_point(data = week_cycles_min,aes(x=time_hour,y=week_cycles_min$frequency, color = "royalblue2"),size = 7)+
scale_color_identity(name ="" ,breaks = c("blue","red"),
labels = c("All Flights (scheculed for departure)",
"Late Flights (departure delayed >15)"),
guide =  guide_legend(override.aes = list(linetype = c(1, 1), shape =                                                        c(16,16),size = c(1,1))))+
theme_light()  +
xlab("")+ ylab("Flights  \n per day") +
xlim(as.Date(c("2013-01-01","2014-01-01")))+  ylim(c(0, 400)) +
theme(axis.title.y = element_text(angle = 0, vjust = 1.1, hjust = 10)) +
scale_x_date(date_labels = "%d%b%Y", date_breaks = "1 month",expand = c(0,0)) +
theme(legend.position="top",legend.direction = "vertical") +
ggtitle(label = "Weekly Cycles", subtitle = "the airport = EWR   Year = 2013") +
theme(plot.title = element_text(hjust = 0.5,size = 20),
plot.subtitle = element_text(hjust = 0.5,size = 15),legend.text=element_text(size=12,
face = "bold"))
d <- get_legend(p + scale_color_identity(name ="\n\n WEEKLY CYCLES  \n FEW FLIGHTS: \n SUNDAYS AND SATURDAYS \n MOST FLIGHTS: \n  MONDAYS, THURSDAYS \n AND FRIDAYS" ,
breaks = c("royalblue2"), labels = c("Fewer flights on holidays"),
guide =  guide_legend(override.aes = list(linetype = c(0), shape =                                                        c(16),size = c(7)))) +
theme(legend.text=element_text(size=12, face = "bold"),
legend.title=element_text(size=12, face = "bold")))
grid.arrange(d, p, layout_matrix = matrix(c(1,2,2, 2, 2), ncol = 5),
top = textGrob("   TEMPORAL EFFECTS",
gp=gpar(fontsize=45, col = "royalblue2", fontface = 2)))
#EWR/ LGA/ JFK to choose
week_cycles <- as.data.frame(flights) %>% filter(origin == 'EWR') %>% dplyr::select(time_hour ,dep_delay ,sched_dep_time)
week_cycles$time_hour <- as.Date(week_cycles$time_hour,'ddmmmyyyy')
week_cycles<- week_cycles %>% mutate(delay = if_else(dep_delay <= 15 ,0,1,0))
week_cycles_freq <- week_cycles %>% group_by(time_hour) %>% summarise(frequency = n())
week_cycles_delay <- week_cycles %>% group_by(time_hour) %>% summarise(sum(delay))
l <- length(week_cycles_freq$frequency)
week_cycles_min <- week_cycles_freq[c(2:(l-1)),]
week_cycles_min <- week_cycles_min %>% mutate(local_min = (week_cycles_min$frequency == runmin(week_cycles_min$frequency,length(week_cycles_min$frequency)/1.3)))
week_cycles_min <- week_cycles_min %>% filter(local_min == T) %>% filter(frequency < 250)
p <- ggplot(data = week_cycles_freq,aes(x = time_hour,
y= week_cycles_freq$frequency,colour = "blue")) +
geom_point() + geom_line(aes(color = "blue")) +
geom_point(data = week_cycles_delay,aes(x=time_hour,y= `sum(delay)`, color ='red')) +
geom_linerange(data = week_cycles_delay,aes(x= time_hour, ymax =`sum(delay)` ,ymin=0),color = 'red') +
geom_point(data = week_cycles_min,aes(x=time_hour,y=week_cycles_min$frequency, color = "royalblue2"),size = 7)+
scale_color_identity(name ="" ,breaks = c("blue","red"),
labels = c("All Flights (scheculed for departure)",
"Late Flights (departure delayed >15)"),
guide =  guide_legend(override.aes = list(linetype = c(1, 1), shape =                                                        c(16,16),size = c(1,1))))+
theme_light()  +
xlab("")+ ylab("Flights  \n per day") +
xlim(as.Date(c("2013-01-01","2014-01-01")))+  ylim(c(0, 400)) +
theme(axis.title.y = element_text(angle = 0, vjust = 1.1, hjust = 10)) +
scale_x_date(date_labels = "%d%b%Y", date_breaks = "1 month",expand = c(0,0)) +
theme(legend.position="top",legend.direction = "vertical") +
ggtitle(label = "Weekly Cycles", subtitle = "the airport = EWR   Year = 2013") +
theme(plot.title = element_text(hjust = 0.5,size = 20, face = "bold"),
plot.subtitle = element_text(hjust = 0.5,size = 15),
legend.text=element_text(size=12,face = "bold"))
d <- get_legend(p + scale_color_identity(name ="\n\n WEEKLY CYCLES  \n FEW FLIGHTS: \n SUNDAYS AND SATURDAYS \n MOST FLIGHTS: \n  MONDAYS, THURSDAYS \n AND FRIDAYS" ,
breaks = c("royalblue2"), labels = c("Fewer flights on holidays"),
guide =  guide_legend(override.aes = list(linetype = c(0), shape =                                                        c(16),size = c(7)))) +
theme(legend.text=element_text(size=12, face = "bold"),
legend.title=element_text(size=12, face = "bold")))
grid.arrange(d, p, layout_matrix = matrix(c(1,2,2, 2, 2), ncol = 5),
top = textGrob("   TEMPORAL EFFECTS",
gp=gpar(fontsize=45, col = "royalblue2", fontface = 2)))
#EWR/ LGA/ JFK to choose
week_cycles <- as.data.frame(flights) %>% filter(origin == 'EWR') %>% dplyr::select(time_hour ,dep_delay ,sched_dep_time)
week_cycles$time_hour <- as.Date(week_cycles$time_hour,'ddmmmyyyy')
week_cycles<- week_cycles %>% mutate(delay = if_else(dep_delay <= 15 ,0,1,0))
week_cycles_freq <- week_cycles %>% group_by(time_hour) %>% summarise(frequency = n())
week_cycles_delay <- week_cycles %>% group_by(time_hour) %>% summarise(sum(delay))
l <- length(week_cycles_freq$frequency)
week_cycles_min <- week_cycles_freq[c(2:(l-1)),]
week_cycles_min <- week_cycles_min %>% mutate(local_min = (week_cycles_min$frequency == runmin(week_cycles_min$frequency,length(week_cycles_min$frequency)/1.3)))
week_cycles_min <- week_cycles_min %>% filter(local_min == T) %>% filter(frequency < 250)
p <- ggplot(data = week_cycles_freq,aes(x = time_hour,
y= week_cycles_freq$frequency,colour = "blue")) +
geom_point() + geom_line(aes(color = "blue")) +
geom_point(data = week_cycles_delay,aes(x=time_hour,y= `sum(delay)`, color ='red')) +
geom_linerange(data = week_cycles_delay,aes(x= time_hour, ymax =`sum(delay)` ,ymin=0),color = 'red') +
geom_point(data = week_cycles_min,aes(x=time_hour,y=week_cycles_min$frequency, color = "royalblue2"),size = 7)+
scale_color_identity(name ="" ,breaks = c("blue","red"),
labels = c("All Flights (scheculed for departure)",
"Late Flights (departure delayed >15)"),
guide =  guide_legend(override.aes = list(linetype = c(1, 1), shape =                                                        c(16,16),size = c(1,1))))+
theme_light()  +
xlab("")+ ylab("Flights  \n per day") +
xlim(as.Date(c("2013-01-01","2014-01-01")))+  ylim(c(0, 400)) +
theme(axis.title.y = element_text(angle = 0, vjust = 1.1, hjust = 10)) +
scale_x_date(date_labels = "%d%b%Y", date_breaks = "1 month",expand = c(0,0)) +
theme(legend.position="top",legend.direction = "vertical") +
ggtitle(label = "Weekly Cycles", subtitle = "the airport = EWR   Year = 2013") +
theme(plot.title = element_text(hjust = 0.5,size = 20, face = "bold"),
plot.subtitle = element_text(hjust = 0.5,size = 15, face = "bold"),
legend.text=element_text(size=12,face = "bold"))
d <- get_legend(p + scale_color_identity(name ="\n\n WEEKLY CYCLES  \n FEW FLIGHTS: \n SUNDAYS AND SATURDAYS \n MOST FLIGHTS: \n  MONDAYS, THURSDAYS \n AND FRIDAYS" ,
breaks = c("royalblue2"), labels = c("Fewer flights on holidays"),
guide =  guide_legend(override.aes = list(linetype = c(0), shape =                                                        c(16),size = c(7)))) +
theme(legend.text=element_text(size=12, face = "bold"),
legend.title=element_text(size=12, face = "bold")))
grid.arrange(d, p, layout_matrix = matrix(c(1,2,2, 2, 2), ncol = 5),
top = textGrob("   TEMPORAL EFFECTS",
gp=gpar(fontsize=45, col = "royalblue2", fontface = 2)))
dep_delay_loc <- dep_delay_loc %>% mutate(nyc_EWR_lon = -74.16867) %>%
mutate(nyc_EWR_lat = 40.6925 )
dep_delay_loc <- as.data.frame(dep_delay_loc)
dep_delay_trans <- dep_delay_loc %>%
select(lon,lat) %>% usmap_transform()
# tools and data upload
library(ggplot2)
library(dplyr)
library(scales) # needed for formatting y-axis labels to non-scientific type
library(tidyr)
library(tidyverse)
library(ggthemes)
library(datasets)
library(nycflights13)
library(plotly)
library(lubridate)
library(hexbin)
library(usmap)
library(rgdal)
library(ggiraph)
library(wesanderson)
library(viridis)
library(gridExtra)
library(grid)
library(cowplot)
library(caTools)
options(scipen = 999)
flights <- as.data.frame(nycflights13::flights)
wheather <- nycflights13::weather
airports <- nycflights13::airports
planes <- nycflights13::planes
Sys.setlocale("LC_ALL", "English")
#EWR/ LGA/ JFK to choose
week_cycles <- as.data.frame(flights) %>% filter(origin == 'EWR') %>% dplyr::select(time_hour ,dep_delay ,sched_dep_time)
week_cycles$time_hour <- as.Date(week_cycles$time_hour,'ddmmmyyyy')
week_cycles<- week_cycles %>% mutate(delay = if_else(dep_delay <= 15 ,0,1,0))
week_cycles_freq <- week_cycles %>% group_by(time_hour) %>% summarise(frequency = n())
week_cycles_delay <- week_cycles %>% group_by(time_hour) %>% summarise(sum(delay))
l <- length(week_cycles_freq$frequency)
week_cycles_min <- week_cycles_freq[c(2:(l-1)),]
week_cycles_min <- week_cycles_min %>% mutate(local_min = (week_cycles_min$frequency == runmin(week_cycles_min$frequency,length(week_cycles_min$frequency)/1.3)))
week_cycles_min <- week_cycles_min %>% filter(local_min == T) %>% filter(frequency < 250)
p <- ggplot(data = week_cycles_freq,aes(x = time_hour,
y= week_cycles_freq$frequency,colour = "blue")) +
geom_point() + geom_line(aes(color = "blue")) +
geom_point(data = week_cycles_delay,aes(x=time_hour,y= `sum(delay)`, color ='red')) +
geom_linerange(data = week_cycles_delay,aes(x= time_hour, ymax =`sum(delay)` ,ymin=0),color = 'red') +
geom_point(data = week_cycles_min,aes(x=time_hour,y=week_cycles_min$frequency, color = "royalblue2"),size = 7)+
scale_color_identity(name ="" ,breaks = c("blue","red"),
labels = c("All Flights (scheculed for departure)",
"Late Flights (departure delayed >15)"),
guide =  guide_legend(override.aes = list(linetype = c(1, 1), shape =                                                        c(16,16),size = c(1,1))))+
theme_light()  +
xlab("")+ ylab("Flights  \n per day") +
xlim(as.Date(c("2013-01-01","2014-01-01")))+  ylim(c(0, 400)) +
theme(axis.title.y = element_text(angle = 0, vjust = 1.1, hjust = 10)) +
scale_x_date(date_labels = "%d%b%Y", date_breaks = "1 month",expand = c(0,0)) +
theme(legend.position="top",legend.direction = "vertical") +
ggtitle(label = "Weekly Cycles", subtitle = "the airport = EWR   Year = 2013") +
theme(plot.title = element_text(hjust = 0.5,size = 20, face = "bold"),
plot.subtitle = element_text(hjust = 0.5,size = 15, face = "bold"),
legend.text=element_text(size=12,face = "bold"))
d <- get_legend(p + scale_color_identity(name ="\n\n WEEKLY CYCLES  \n FEW FLIGHTS: \n SUNDAYS AND SATURDAYS \n MOST FLIGHTS: \n  MONDAYS, THURSDAYS \n AND FRIDAYS" ,
breaks = c("royalblue2"), labels = c("Fewer flights on holidays"),
guide =  guide_legend(override.aes = list(linetype = c(0), shape =                                                        c(16),size = c(7)))) +
theme(legend.text=element_text(size=12, face = "bold"),
legend.title=element_text(size=12, face = "bold")))
grid.arrange(d, p, layout_matrix = matrix(c(1,2,2, 2, 2), ncol = 5),
top = textGrob("   TEMPORAL EFFECTS",
gp=gpar(fontsize=45, col = "royalblue2", fontface = 2)))
dep_delay <- as.data.frame(flights) %>% filter(origin == 'JFK') %>% group_by(dest) %>%
count()
colnames(dep_delay) <-c("faa", "amount")
dep_delay2 <- as.data.frame(flights) %>% filter(origin == 'JFK') %>% group_by(dest) %>% filter(dep_delay >15) %>%   count()
colnames(dep_delay2) <- c("faa","delay")
dep_delay <- dep_delay %>% left_join(dep_delay2) %>% mutate(per = delay/ amount)
dep_delay_loc <- dep_delay %>% left_join(airports, by = "faa") %>% drop_na()
# removed : STT,SJU, BQN need to be explain why they can be found.
dep_delay_loc <- dep_delay_loc %>% mutate(per_ch = NA)
dep_delay_loc$per_ch[dep_delay_loc$per <= 0.10 ] <- "<= 10%"
dep_delay_loc$per_ch[dep_delay_loc$per <= 0.15 & dep_delay_loc$per > 0.10 ] <- "10% - 15%"
dep_delay_loc$per_ch[dep_delay_loc$per <= 0.20 & dep_delay_loc$per > 0.15 ] <- "15% - 20%"
dep_delay_loc$per_ch[dep_delay_loc$per <= 0.25 & dep_delay_loc$per > 0.20 ] <- "20% - 25%"
dep_delay_loc$per_ch[dep_delay_loc$per >= 0.25] <- "25% <="
dep_delay_loc$per_ch <- factor(dep_delay_loc$per_ch, levels = c("<= 10%","10% - 15%",
"15% - 20%","20% - 25%","25% <="))
dep_delay_loc <- dep_delay_loc %>% mutate(nyc_EWR_lon = -74.16867) %>%
mutate(nyc_EWR_lat = 40.6925 )
dep_delay_loc <- as.data.frame(dep_delay_loc)
dep_delay_trans <- dep_delay_loc %>%
select(lon,lat) %>% usmap_transform()
dep_delay_loc$lon <- dep_delay_trans$lon.1
dep_delay_loc$lat <- dep_delay_trans$lat.1
dep_delay_trans <- dep_delay_loc %>% select(nyc_EWR_lon,nyc_EWR_lat) %>% usmap_transform()
dep_delay_loc$lnyc_EWR_lon <- dep_delay_trans$nyc_EWR_lon.1
dep_delay_loc$lnyc_EWR_lat <- dep_delay_trans$nyc_EWR_lat.1
row.names(dep_delay_loc) <- dep_delay_loc$name
plot_del <- plot_usmap(regions = "states",labels = TRUE,exclude =  c("AK","HI"), size = 0.5,
label_color = "grey",
color = "grey") +
theme(panel.background=element_blank()) +
geom_segment(data = dep_delay_loc,
aes(xend = lon,yend = lat, x = lnyc_EWR_lon,
y = lnyc_EWR_lat ,colour = per_ch),size = 0.5) +
geom_point(data = dep_delay_loc, shape = 1,
aes(x = lon , y = lat, colour =  per_ch,
text = row.names(dep_delay_loc)),
size = 2, show.legend = F) +
scale_color_manual(name = "",
values = c("green","purple","blue","orange","red"),
guide =  guide_legend(override.aes = list(linetype = c(1, 1, 1,1,1),
size = c(2,2,2,2,2))))+
labs(title = '<b>% of Flight Departures Delayed > 15 Min</b><br> Airport = JFK Year = 2013<br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br> <br>Click line endpoint to see that airports departures') +
theme(plot.title = element_text(hjust = 0.5,size = 12))
ggplotly(plot_del, tooltip = "text") %>% layout(legend = list(x = 0, y = 0))
flights_delayed <- filter(flights, dep_delay >15 ) #We want to see only the delayed flights
flights_delayed1 <- flights_delayed %>%  group_by(time_hour) %>% summarise(Avg_dep_delay = mean(dep_delay))
Wheather_cond <- left_join(flights_delayed1, wheather) #combine the two relevant data frames
#aggregate the data so we can see the conection between visib to avg sep delay.
visib_df <- Wheather_cond %>% group_by(visib) %>% summarise(Avg_dep_delay = mean(Avg_dep_delay, na.rm = T), n = n())
visib_df <- visib_df %>% filter(n > 30)
ggplot(data = visib_df, mapping = aes(x = visib, y = Avg_dep_delay)) + geom_point(color = "violetred4") +
geom_smooth(method = "lm", fill = "violet", color = "violetred4") +
labs(x = "visibility", y="Average Departure Delay Time (minutes)", title = "Average Departure Delay vs. Quality of visibility")
#As before we summarise the average delay, only this time we compare it to the wind speed.
by_wind_speed <- Wheather_cond %>% group_by(wind_speed) %>% summarise(Avg_dep_delay = mean(Avg_dep_delay, na.rm = T), n = n())
#we filtered average values of less then 30 samples.
by_wind_speed <-  filter(by_wind_speed, n>30)
ggplot(data = by_wind_speed, mapping = aes(x = wind_speed, y = Avg_dep_delay)) +
geom_point(color = "dodgerblue4") +
geom_smooth(method = "lm", fill = "deepskyblue", color = "dodgerblue4") +
labs(x = "Wind_speed (mph)", y="Average Departure Delay Time (minutes)",
title = "Average Departure Delay vs. Wind speed")
#Creat a plot that shows the distribution of the delayed flights in each day of every month
ggplot(data = flights_delayed, aes(x = day)) +
geom_bar(aes(fill = month))+ facet_wrap(~month) +
labs(title  = "Distribution of delayed flight in each month",
subtitle = "(Delayed flights are set to be flights that left the airport with over 15 minutes delay)", y = "Number of delayed flight", x = "Day") + scale_fill_viridis_c(guide = F)
#First' we created a df that containes only the data that we need
by_month <- flights_delayed %>% group_by(month) %>% summarise(val = n())
by_month <- data.frame(by_month, semp = c(rep(1,12))) #named the real data as sample 1.
sampled_df <- by_month
row.names(sampled_df) <- by_month$month
#loop that sample new vecrots and tag the sample with number
#also each sample will merged to the data that containes the real values.
for (i in (2:9)){
x <- data.frame(month = c(1:12), semp = c(rep(i,12)),val = sample(by_month$val))
sampled_df <- full_join(sampled_df, x)
}
#plot all of the samples in the Line-up method
# we added colors that will help us identify the pattern of the values.
ggplot(data = sampled_df, mapping = aes(x  = month, y = val, fill = val)) + facet_wrap(~semp) +
scale_x_continuous(breaks = c(1:12)) +
geom_bar(stat="identity") +
labs(title  = "Simulated data-sets of delayed flight using line-up",
subtitle = "(Delayed flights are set to be flights that left the airport with over 15 minutes delay)",
y = "Number of delayed flight", x = "Month")+
theme(axis.text.x = element_text(size = 8)) +
scale_fill_distiller(palette = 'RdPu', direction =1)
plot_del <- plot_usmap(regions = "states",labels = TRUE,exclude =  c("AK","HI"), size = 0.5,
label_color = "grey",
color = "grey") +
theme(panel.background=element_blank()) +
geom_segment(data = dep_delay_loc,
aes(xend = lon,yend = lat, x = lnyc_EWR_lon,
y = lnyc_EWR_lat ,colour = per_ch),size = 0.5) +
geom_point(data = dep_delay_loc, shape = 1,
aes(x = lon , y = lat, colour =  per_ch,
text = row.names(dep_delay_loc)),
size = 1.5, show.legend = F) +
scale_color_manual(name = "",
values = c("green","purple","blue","orange","red"),
guide =  guide_legend(override.aes = list(linetype = c(1, 1, 1,1,1),
size = c(2,2,2,2,2))))+
labs(title = '<b>% of Flight Departures Delayed > 15 Min</b><br> Airport = JFK Year = 2013<br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br> <br>Click line endpoint to see that airports departures') +
theme(plot.title = element_text(hjust = 0.5,size = 12))
ggplotly(plot_del, tooltip = "text") %>% layout(legend = list(x = 0, y = 0))
dep_delay <- as.data.frame(flights) %>% filter(origin == 'JFK') %>% group_by(dest) %>%
count()
colnames(dep_delay) <-c("faa", "amount")
dep_delay2 <- as.data.frame(flights) %>% filter(origin == 'JFK') %>% group_by(dest) %>% filter(dep_delay >15) %>%   count()
colnames(dep_delay2) <- c("faa","delay")
dep_delay <- dep_delay %>% left_join(dep_delay2) %>% mutate(per = delay/ amount)
dep_delay_loc <- dep_delay %>% left_join(airports, by = "faa") %>% drop_na()
# removed : STT,SJU, BQN need to be explain why they can be found.
dep_delay_loc <- dep_delay_loc %>% mutate(per_ch = NA)
dep_delay_loc$per_ch[dep_delay_loc$per <= 0.10 ] <- "<= 10%"
dep_delay_loc$per_ch[dep_delay_loc$per <= 0.15 & dep_delay_loc$per > 0.10 ] <- "10% - 15%"
dep_delay_loc$per_ch[dep_delay_loc$per <= 0.20 & dep_delay_loc$per > 0.15 ] <- "15% - 20%"
dep_delay_loc$per_ch[dep_delay_loc$per <= 0.25 & dep_delay_loc$per > 0.20 ] <- "20% - 25%"
dep_delay_loc$per_ch[dep_delay_loc$per >= 0.25] <- " > 25%"
dep_delay_loc$per_ch <- factor(dep_delay_loc$per_ch, levels = c("<= 10%","10% - 15%",
"15% - 20%","20% - 25%"," > 25%"))
dep_delay_loc <- dep_delay_loc %>% mutate(nyc_EWR_lon = -74.16867) %>%
mutate(nyc_EWR_lat = 40.6925 )
dep_delay_loc <- as.data.frame(dep_delay_loc)
dep_delay_trans <- dep_delay_loc %>%
select(lon,lat) %>% usmap_transform()
dep_delay_loc$lon <- dep_delay_trans$lon.1
dep_delay_loc$lat <- dep_delay_trans$lat.1
dep_delay_trans <- dep_delay_loc %>% select(nyc_EWR_lon,nyc_EWR_lat) %>% usmap_transform()
dep_delay_loc$lnyc_EWR_lon <- dep_delay_trans$nyc_EWR_lon.1
dep_delay_loc$lnyc_EWR_lat <- dep_delay_trans$nyc_EWR_lat.1
row.names(dep_delay_loc) <- dep_delay_loc$name
plot_del <- plot_usmap(regions = "states",labels = TRUE,exclude =  c("AK","HI"), size = 0.5,
label_color = "grey",
color = "grey") +
theme(panel.background=element_blank()) +
geom_segment(data = dep_delay_loc,
aes(xend = lon,yend = lat, x = lnyc_EWR_lon,
y = lnyc_EWR_lat ,colour = per_ch),size = 0.5) +
geom_point(data = dep_delay_loc, shape = 1,
aes(x = lon , y = lat, colour =  per_ch,
text = row.names(dep_delay_loc)),
size = 1.5, show.legend = F) +
scale_color_manual(name = "",
values = c("green","purple","blue","orange","red"),
guide =  guide_legend(override.aes = list(linetype = c(1, 1, 1,1,1),
size = c(2,2,2,2,2))))+
labs(title = '<b>% of Flight Departures Delayed > 15 Min</b><br> Airport = JFK Year = 2013<br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br> <br>Click line endpoint to see that airports departures') +
theme(plot.title = element_text(hjust = 0.5,size = 12))
ggplotly(plot_del, tooltip = "text") %>% layout(legend = list(x = 0, y = 0))
plot_del <- plot_usmap(regions = "states",labels = TRUE,exclude =  c("AK","HI"), size = 0.5,
label_color = "grey",
color = "grey") +
theme(panel.background=element_blank()) +
geom_segment(data = dep_delay_loc,
aes(xend = lon,yend = lat, x = lnyc_EWR_lon,
y = lnyc_EWR_lat ,colour = per_ch),size = 0.5) +
geom_point(data = dep_delay_loc, shape = 1,
aes(x = lon , y = lat, colour =  per_ch,
text = row.names(dep_delay_loc)),
size = 1, show.legend = F) +
scale_color_manual(name = "",
values = c("green","purple","blue","orange","red"),
guide =  guide_legend(override.aes = list(linetype = c(1, 1, 1,1,1),
size = c(2,2,2,2,2))))+
labs(title = '<b>% of Flight Departures Delayed > 15 Min</b><br> Airport = JFK Year = 2013<br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br> <br>Click line endpoint to see that airports departures') +
theme(plot.title = element_text(hjust = 0.5,size = 12))
ggplotly(plot_del, tooltip = "text") %>% layout(legend = list(x = 0, y = 0))
plot_del <- plot_usmap(regions = "states",labels = TRUE,exclude =  c("AK","HI"), size = 0.5,
label_color = "grey",
color = "grey") +
theme(panel.background=element_blank()) +
geom_segment(data = dep_delay_loc,
aes(xend = lon,yend = lat, x = lnyc_EWR_lon,
y = lnyc_EWR_lat ,colour = per_ch),size = 0.5) +
geom_point(data = dep_delay_loc, shape = 1,
aes(x = lon , y = lat, colour =  per_ch,
text = row.names(dep_delay_loc)),
size = 1.25, show.legend = F) +
scale_color_manual(name = "",
values = c("green","purple","blue","orange","red"),
guide =  guide_legend(override.aes = list(linetype = c(1, 1, 1,1,1),
size = c(2,2,2,2,2))))+
labs(title = '<b>% of Flight Departures Delayed > 15 Min</b><br> Airport = JFK Year = 2013<br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br>Click line endpoint to see that airports departures') +
theme(plot.title = element_text(hjust = 0.5,size = 12))
ggplotly(plot_del, tooltip = "text") %>% layout(legend = list(x = 0, y = 0))
ggplotly(plot_del, tooltip = "text") %>% layout(legend = list(x = -0.1, y = -0.1))
#EWR/ LGA/ JFK to choose
week_cycles <- as.data.frame(flights) %>% filter(origin == 'EWR') %>% dplyr::select(time_hour ,dep_delay ,sched_dep_time)
week_cycles$time_hour <- as.Date(week_cycles$time_hour,'ddmmmyyyy')
week_cycles<- week_cycles %>% mutate(delay = if_else(dep_delay <= 15 ,0,1,0))
week_cycles_freq <- week_cycles %>% group_by(time_hour) %>% summarise(frequency = n())
week_cycles_delay <- week_cycles %>% group_by(time_hour) %>% summarise(sum(delay))
l <- length(week_cycles_freq$frequency)
week_cycles_min <- week_cycles_freq[c(2:(l-1)),]
week_cycles_min <- week_cycles_min %>% mutate(local_min = (week_cycles_min$frequency == runmin(week_cycles_min$frequency,length(week_cycles_min$frequency)/1.3)))
week_cycles_min <- week_cycles_min %>% filter(local_min == T) %>% filter(frequency < 250)
p <- ggplot(data = week_cycles_freq,aes(x = time_hour,
y= week_cycles_freq$frequency,colour = "blue")) +
geom_point() + geom_line(aes(color = "blue")) +
geom_point(data = week_cycles_delay,aes(x=time_hour,y= `sum(delay)`, color ='red')) +
geom_linerange(data = week_cycles_delay,aes(x= time_hour, ymax =`sum(delay)` ,ymin=0),color = 'red') +
geom_point(data = week_cycles_min,aes(x=time_hour,y=week_cycles_min$frequency, color = "royalblue2"),size = 7)+
scale_color_identity(name ="" ,breaks = c("blue","red"),
labels = c("All Flights (scheculed for departure)",
"Late Flights (departure delayed >15)"),
guide =  guide_legend(override.aes = list(linetype = c(1, 1), shape =                                                        c(16,16),size = c(1,1))))+
theme_light()  +
xlab("")+ ylab("Flights  \n per day") +
xlim(as.Date(c("2013-01-01","2014-01-01")))+  ylim(c(0, 400)) +
theme(axis.title.y = element_text(angle = 0, vjust = 1.1, hjust = 10)) +
scale_x_date(date_labels = "%d%b%Y", date_breaks = "1 month",expand = c(0,0)) +
theme(legend.position="top",legend.direction = "vertical") +
ggtitle(label = "Weekly Cycles", subtitle = "the airport = EWR   Year = 2013") +
theme(plot.title = element_text(hjust = 0.5,size = 20, face = "bold"),
plot.subtitle = element_text(hjust = 0.5,size = 15, face = "bold"),
legend.text=element_text(size=12,face = "bold"))
d <- get_legend(p + scale_color_identity(name ="\n\n WEEKLY CYCLES  \n FEW FLIGHTS: \n SUNDAYS AND SATURDAYS \n MOST FLIGHTS: \n  MONDAYS, THURSDAYS \n AND FRIDAYS" ,
breaks = c("royalblue2"), labels = c("Fewer flights on holidays"),
guide =  guide_legend(override.aes = list(linetype = c(0), shape =                                                        c(16),size = c(7)))) +
theme(legend.text=element_text(size=12, face = "bold"),
legend.title=element_text(size=12, face = "bold")))
grid.arrange(d, p, layout_matrix = matrix(c(1,2,2, 2, 2), ncol = 5),
top = textGrob("   TEMPORAL EFFECTS",
gp=gpar(fontsize=45, col = "royalblue2", fontface = 2)))
#EWR/ LGA/ JFK to choose
week_cycles <- as.data.frame(flights) %>% filter(origin == 'EWR') %>% dplyr::select(time_hour ,dep_delay ,sched_dep_time)
week_cycles$time_hour <- as.Date(week_cycles$time_hour,'ddmmmyyyy')
week_cycles<- week_cycles %>% mutate(delay = if_else(dep_delay <= 15 ,0,1,0))
week_cycles_freq <- week_cycles %>% group_by(time_hour) %>% summarise(frequency = n())
week_cycles_delay <- week_cycles %>% group_by(time_hour) %>% summarise(sum(delay))
l <- length(week_cycles_freq$frequency)
week_cycles_min <- week_cycles_freq[c(2:(l-1)),]
week_cycles_min <- week_cycles_min %>% mutate(local_min = (week_cycles_min$frequency == runmin(week_cycles_min$frequency,length(week_cycles_min$frequency)/1.3)))
week_cycles_min <- week_cycles_min %>% filter(local_min == T) %>% filter(frequency < 250)
p <- ggplot(data = week_cycles_freq,aes(x = time_hour,
y= week_cycles_freq$frequency,colour = "blue")) +
geom_point() + geom_line(aes(color = "blue")) +
geom_point(data = week_cycles_delay,aes(x=time_hour,y= `sum(delay)`, color ='red')) +
geom_linerange(data = week_cycles_delay,aes(x= time_hour, ymax =`sum(delay)` ,ymin=0),color = 'red') +
geom_point(data = week_cycles_min,aes(x=time_hour,y=week_cycles_min$frequency, color = "royalblue2"),size = 7)+
scale_color_identity(name ="" ,breaks = c("blue","red"),
labels = c("All Flights (scheculed for departure)",
"Late Flights (departure delayed >15)"),
guide =  guide_legend(override.aes = list(linetype = c(1, 1), shape =                                                        c(16,16),size = c(1,1))))+
theme_light()  +
xlab("")+ ylab("Flights  \n per day") +
xlim(as.Date(c("2013-01-01","2014-01-01")))+  ylim(c(0, 400)) +
theme(axis.title.y = element_text(angle = 0, vjust = 1.1, hjust = 10)) +
scale_x_date(date_labels = "%d%b%Y", date_breaks = "1 month",expand = c(0,0)) +
theme(legend.position="top",legend.direction = "vertical") +
ggtitle(label = "Weekly Cycles", subtitle = "the airport = EWR   Year = 2013") +
theme(plot.title = element_text(hjust = 0.5,size = 20, face = "bold"),
plot.subtitle = element_text(hjust = 0.5,size = 15, face = "bold"),
legend.text=element_text(size=12,face = "bold"))
d <- get_legend(p + scale_color_identity(name ="\n\n WEEKLY CYCLES  \n FEW FLIGHTS: \n SUNDAYS AND SATURDAYS \n MOST FLIGHTS: \n  MONDAYS, THURSDAYS \n AND FRIDAYS" ,
breaks = c("royalblue2"), labels = c("Fewer flights on holidays"),
guide =  guide_legend(override.aes = list(linetype = c(0), shape =                                                        c(16),size = c(7)))) +
theme(legend.text=element_text(size=12, face = "bold"),
legend.title=element_text(size=12, face = "bold")))
grid.arrange(d, p, layout_matrix = matrix(c(1,2,2, 2, 2), ncol = 5),
top = textGrob("   TEMPORAL EFFECTS",
gp=gpar(fontsize=45, col = "royalblue2", fontface = 2)))
#EWR/ LGA/ JFK to choose
week_cycles <- as.data.frame(flights) %>% filter(origin == 'EWR') %>% dplyr::select(time_hour ,dep_delay ,sched_dep_time)
week_cycles$time_hour <- as.Date(week_cycles$time_hour,'ddmmmyyyy')
week_cycles<- week_cycles %>% mutate(delay = if_else(dep_delay <= 15 ,0,1,0))
week_cycles_freq <- week_cycles %>% group_by(time_hour) %>% summarise(frequency = n())
week_cycles_delay <- week_cycles %>% group_by(time_hour) %>% summarise(sum(delay))
l <- length(week_cycles_freq$frequency)
week_cycles_min <- week_cycles_freq[c(2:(l-1)),]
week_cycles_min <- week_cycles_min %>% mutate(local_min = (week_cycles_min$frequency == runmin(week_cycles_min$frequency,length(week_cycles_min$frequency)/1.3)))
week_cycles_min <- week_cycles_min %>% filter(local_min == T) %>% filter(frequency < 250)
p <- ggplot(data = week_cycles_freq,aes(x = time_hour,
y= week_cycles_freq$frequency,colour = "blue")) +
geom_point() + geom_line(aes(color = "blue")) +
geom_point(data = week_cycles_delay,aes(x=time_hour,y= `sum(delay)`, color ='red')) +
geom_linerange(data = week_cycles_delay,aes(x= time_hour, ymax =`sum(delay)` ,ymin=0),color = 'red') +
geom_point(data = week_cycles_min,aes(x=time_hour,y=week_cycles_min$frequency, color = "royalblue2"),size = 7)+
scale_color_identity(name ="" ,breaks = c("blue","red"),
labels = c("All Flights (scheculed for departure)",
"Late Flights (departure delayed >15)"),
guide =  guide_legend(override.aes = list(linetype = c(1, 1), shape =                                                        c(16,16),size = c(1,1))))+
theme_light()  +
xlab("")+ ylab("Flights  \n per day") +
xlim(as.Date(c("2013-01-01","2014-01-01")))+  ylim(c(0, 400)) +
theme(axis.title.y = element_text(angle = 0, vjust = 1.1, hjust = 10)) +
scale_x_date(date_labels = "%d%b%Y", date_breaks = "1 month",expand = c(0,0)) +
theme(legend.position="top",legend.direction = "vertical") +
ggtitle(label = "Weekly Cycles", subtitle = "the airport = EWR   Year = 2013") +
theme(plot.title = element_text(hjust = 0.5,size = 20, face = "bold"),
plot.subtitle = element_text(hjust = 0.5,size = 15, face = "bold"),
legend.text=element_text(size=12,face = "bold"))
d <- get_legend(p + scale_color_identity(name ="\n\n WEEKLY CYCLES  \n FEW FLIGHTS: \n SUNDAYS AND SATURDAYS \n MOST FLIGHTS: \n  MONDAYS, THURSDAYS \n AND FRIDAYS" ,
breaks = c("royalblue2"), labels = c("Fewer flights on holidays"),
guide =  guide_legend(override.aes = list(linetype = c(0), shape =                                                        c(16),size = c(7)))) +
theme(legend.text=element_text(size=12, face = "bold"),
legend.title=element_text(size=12, face = "bold")))
grid.arrange(d, p, layout_matrix = matrix(c(1,2,2, 2, 2), ncol = 5),
top = textGrob("   TEMPORAL EFFECTS",
gp=gpar(fontsize=45, col = "royalblue2", fontface = 2)))
