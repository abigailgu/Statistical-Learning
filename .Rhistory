library(ggthemes)
library(datasets)
library(nycflights13)
library(kableExtra) #table styling
library(e1071) # kurtosis and skeeness
library(MASS) # reg modeling
library(corrplot)
library(caTools)
library(plotly)
options(scipen = 999)
flights <- as.data.frame(nycflights13::flights)
wheather <- nycflights13::weather
airports <- nycflights13::airports
planes <- nycflights13::planes
summary(flights)
flights_con <- flights[,c(2:9, 11 ,15:19)]
flights_catgory <- flights[,c(10 ,12:15)]
catgory <- colnames(flights_catgory)
carrier <- flights_catgory %>% count(carrier)# helpful
kable(carrier, row.names = F) %>% kable_styling()
tailnum <-flights_catgory %>% count(tailnum)
kable(tailnum, row.names = F) %>% kable_styling()
origin <- flights_catgory %>% count(origin) #helpful
kable(origin, row.names = F) %>% kable_styling()
dest <- flights_catgory %>% count(dest) # need to check
kable(dest, row.names = F) %>% kable_styling()
air_time <- flights_catgory %>% count(air_time)#need to check
kable(air_time, row.names = F) %>% kable_styling()
countinuous <- colnames(flights_con)
ggplot(data = flights_con) +
geom_bar(mapping = aes(x = month))  # 2 חשוד
ggplot(data = flights_con) +
geom_bar(mapping = aes(x = day))  # 30 לחודש חשוד
ggplot(data = flights, mapping = aes(x = dep_time/100)) +
geom_histogram(binwidth = 0.25) # טיסות שממריאות בלילה ?
ggplot(data = flights, mapping = aes(x = arr_time/100)) +
geom_histogram(binwidth = 0.25)  # טיסות שמגיעות בלילה?
ggplot(data = flights, mapping = aes(x = sched_dep_time/100)) +
geom_histogram(binwidth = 0.25)
ggplot(data = flights, mapping = aes(x = dep_delay)) +
geom_histogram(binwidth = 1) + xlim(0,300)
dep_delay_over <- flights %>% filter(dep_delay > 300)
ggplot(data = flights, mapping = aes(x = arr_delay)) +
geom_histogram(binwidth = 1) + xlim(0,300)
arr_delay_over <- flights %>% filter(arr_delay > 300)
ggplot(data = flights, mapping = aes(x = sched_arr_time/100)) +
geom_histogram(binwidth = 0.25)
ggplot(data = flights, mapping = aes(x = flight)) +
geom_histogram(binwidth = 1) # מזהה טיסה
ggplot(data = flights, mapping = aes(x = distance)) +
geom_histogram(binwidth = 1) + xlim (0,2000)
long_dist <- flights %>% filter(distance > 2000)
#EWR/ LGA/ JFK to choose
week_cycles <- as.data.frame(flights) %>% filter(origin == 'EWR') %>% dplyr::select(time_hour ,dep_delay ,sched_dep_time)
week_cycles$time_hour <- as.Date(week_cycles$time_hour)
week_cycles<- week_cycles %>% mutate(delay = if_else(dep_delay <= 15 ,0,1,0))
week_cycles_freq <- week_cycles %>% group_by(time_hour) %>% summarise(frequency = n())
week_cycles_delay <- week_cycles %>% group_by(time_hour) %>% summarise(sum(delay))
week_cycles_min <- week_cycles_freq %>% mutate(local_min = (week_cycles_freq$frequency == runmin(week_cycles_freq$frequency,length(week_cycles_freq$frequency)/2)))
week_cycles_min <- week_cycles_min %>% filter(local_min == T)
ggplot(data = week_cycles_freq,aes(x = time_hour,
y= week_cycles_freq$frequency,colour = "blue")) +
geom_point(aes(color = "blue")) + geom_line(color = "blue") +
geom_point(data = week_cycles_delay,aes(x=time_hour,y= `sum(delay)`, color ='red')) +
geom_linerange(data = week_cycles_delay,aes(x= time_hour, ymax =`sum(delay)` ,ymin=0),color = 'red') +
scale_color_identity(name ="" ,breaks = c("blue","red"),
labels = c("All Flights (scheculed for departure)",
"Late Flights (departure delayed >15)"),
guide = "legend") +
theme_light()  +
xlab("Date")+ ylab("Flights per day") +
theme(legend.position="top",legend.direction = "vertical") +
ggtitle(label = "Weekly Cycles", subtitle = "the airport, we need to choose, Year = 2013") +
theme(plot.title = element_text(hjust = 0.5,size = 20),plot.subtitle = element_text(hjust = 0.5,size = 15))
#need to takecare in the point of the locl minmun
dep_delay <- as.data.frame(flights) %>% filter(origin == 'EWR') %>%
mutate(delay = if_else(dep_delay <= 15 ,0,1,0)) %>% group_by(faa = dest) %>% summarise(amount = (frequency = n()), dep = sum(delay)) %>% mutate(per = dep/amount)
dep_delay_loc <- dep_delay %>% left_join(airports, by = "faa") %>% drop_na()
# removed : STT,SJU, BQN need to be explain why they can be found.
dep_delay_loc$ <- dep_delay_loc %>% mutate(perc = if_else(per <= 0.10 ,"<= 10%",0,0))
# tools and data upload
library(ggplot2)
library(dplyr)
library(scales) # needed for formatting y-axis labels to non-scientific type
library(tidyr)
library(tidyverse)
library(ggthemes)
library(datasets)
library(nycflights13)
library(kableExtra) #table styling
library(e1071) # kurtosis and skeeness
library(MASS) # reg modeling
library(corrplot)
library(caTools)
library(plotly)
options(scipen = 999)
flights <- as.data.frame(nycflights13::flights)
wheather <- nycflights13::weather
airports <- nycflights13::airports
planes <- nycflights13::planes
flights
wheather
View(airports)
View(flights)
View(planes)
View(wheather)
library(nycflights13)
#EWR/ LGA/ JFK to choose
week_cycles <- as.data.frame(flights) %>% filter(origin == 'EWR') %>% dplyr::select(time_hour ,dep_delay ,sched_dep_time)
week_cycles
week_cycles$time_hour <- as.Date(week_cycles$time_hour)
week_cycles<- week_cycles %>% mutate(delay = if_else(dep_delay <= 15 ,0,1,0))
week_cycles
week_cycles
week_cycles_freq <- week_cycles %>% group_by(time_hour) %>% summarise(frequency = n())
week_cycles_freq
week_cycles_delay <- week_cycles %>% group_by(time_hour) %>% summarise(sum(delay))
week_cycles_min <- week_cycles_freq %>% mutate(local_min = (week_cycles_freq$frequency == runmin(week_cycles_freq$frequency,length(week_cycles_freq$frequency)/2)))
week_cycles_min
week_cycles_min <- week_cycles_min %>% filter(local_min == T)
ggplot(data = week_cycles_freq,aes(x = time_hour,
y= week_cycles_freq$frequency,colour = "blue")) +
geom_point(aes(color = "blue")) + geom_line(color = "blue") +
geom_point(data = week_cycles_delay,aes(x=time_hour,y= `sum(delay)`, color ='red')) +
geom_linerange(data = week_cycles_delay,aes(x= time_hour, ymax =`sum(delay)` ,ymin=0),color = 'red') +
scale_color_identity(name ="" ,breaks = c("blue","red"),
labels = c("All Flights (scheculed for departure)",
"Late Flights (departure delayed >15)"),
guide = "legend") +
theme_light()  +
xlab("Date")+ ylab("Flights per day") +
theme(legend.position="top",legend.direction = "vertical") +
ggtitle(label = "Weekly Cycles", subtitle = "the airport, we need to choose, Year = 2013") +
theme(plot.title = element_text(hjust = 0.5,size = 20),plot.subtitle = element_text(hjust = 0.5,size = 15))
dep_delay <- as.data.frame(flights) %>% filter(origin == 'EWR') %>%
mutate(delay = if_else(dep_delay <= 15 ,0,1,0)) %>% group_by(faa = dest) %>% summarise(amount = (frequency = n()), dep = sum(delay)) %>% mutate(per = dep/amount)
dep_delay_loc <- dep_delay %>% left_join(airports, by = "faa") %>% drop_na()
# removed : STT,SJU, BQN need to be explain why they can be found.
dep_delay_loc$ <- dep_delay_loc %>% mutate(perc = if_else(per <= 0.10 ,"<= 10%",0,0))
# removed : STT,SJU, BQN need to be explain why they can be found.
dep_delay_loc <- dep_delay_loc %>% mutate(perc = if_else(per <= 0.10 ,"<= 10%",0,0))
geo <- list(
scope = 'north america',
projection = list(type = 'azimuthal equal area'),
showland = TRUE,
landcolor = toRGB("gray95"),
countrycolor = toRGB("gray80")
)
fig <- plot_geo(locationmode = 'USA-states', color = I("red"))
fig <- fig %>% add_markers(
data = dep_delay_loc, x = ~lon, y = ~lat, text = ~name,
hoverinfo = "text", alpha = 0.5)
fig <- fig %>% add_segments(
data = group_by(flights, id),
x = ~start_lon, xend = ~end_lon,
y = ~start_lat, yend = ~end_lat,
alpha = 0.3, size = I(1), hoverinfo = "none"
)
# tools and data upload
library(ggplot2)
library(dplyr)
library(scales) # needed for formatting y-axis labels to non-scientific type
library(tidyr)
library(tidyverse)
library(ggthemes)
library(datasets)
library(nycflights13)
library(kableExtra) #table styling
library(e1071) # kurtosis and skeeness
library(MASS) # reg modeling
library(corrplot)
library(caTools)
library(plotly)
options(scipen = 999)
flights <- as.data.frame(nycflights13::flights)
wheather <- nycflights13::weather
airports <- nycflights13::airports
planes <- nycflights13::planes
summary(flights)
#summary(flights)
flights_con <- flights[,c(2:9, 11 ,15:19)]
flights_catgory <- flights[,c(10 ,12:15)]
flights_con
flights_catgory <- flights[,c(10 ,12:15)]
flights_catgory
#summary(flights)
flights_con <- flights[,c(2:9, 11 ,15:19)]
flights_catgory <- flights[,c(10 ,12:15)]
catgory <- colnames(flights_catgory)
carrier <- flights_catgory %>% count(carrier)# helpful
kable(carrier, row.names = F) %>% kable_styling()
tailnum <-flights_catgory %>% count(tailnum)
kable(tailnum, row.names = F) %>% kable_styling()
origin <- flights_catgory %>% count(origin) #helpful
kable(origin, row.names = F) %>% kable_styling()
dest <- flights_catgory %>% count(dest) # need to check
kable(dest, row.names = F) %>% kable_styling()
air_time <- flights_catgory %>% count(air_time)#need to check
kable(air_time, row.names = F) %>% kable_styling()
countinuous <- colnames(flights_con)
ggplot(data = flights_con) +
geom_bar(mapping = aes(x = month))  # 2 חשוד
ggplot(data = flights_con) +
geom_bar(mapping = aes(x = day))  # 30 לחודש חשוד
ggplot(data = flights, mapping = aes(x = dep_time/100)) +
geom_histogram(binwidth = 0.25) # טיסות שממריאות בלילה ?
ggplot(data = flights, mapping = aes(x = arr_time/100)) +
geom_histogram(binwidth = 0.25)  # טיסות שמגיעות בלילה?
ggplot(data = flights, mapping = aes(x = sched_dep_time/100)) +
geom_histogram(binwidth = 0.25)
ggplot(data = flights, mapping = aes(x = dep_delay)) +
geom_histogram(binwidth = 1) + xlim(0,300)
dep_delay_over <- flights %>% filter(dep_delay > 300)
ggplot(data = flights, mapping = aes(x = arr_delay)) +
geom_histogram(binwidth = 1) + xlim(0,300)
arr_delay_over <- flights %>% filter(arr_delay > 300)
ggplot(data = flights, mapping = aes(x = sched_arr_time/100)) +
geom_histogram(binwidth = 0.25)
ggplot(data = flights, mapping = aes(x = flight)) +
geom_histogram(binwidth = 1) # מזהה טיסה
ggplot(data = flights, mapping = aes(x = distance)) +
geom_histogram(binwidth = 1) + xlim (0,2000)
long_dist <- flights %>% filter(distance > 2000)
#EWR/ LGA/ JFK to choose
week_cycles <- as.data.frame(flights) %>% filter(origin == 'EWR') %>% dplyr::select(time_hour ,dep_delay ,sched_dep_time)
week_cycles$time_hour <- as.Date(week_cycles$time_hour)
week_cycles<- week_cycles %>% mutate(delay = if_else(dep_delay <= 15 ,0,1,0))
week_cycles_freq <- week_cycles %>% group_by(time_hour) %>% summarise(frequency = n())
week_cycles_delay <- week_cycles %>% group_by(time_hour) %>% summarise(sum(delay))
week_cycles_min <- week_cycles_freq %>% mutate(local_min = (week_cycles_freq$frequency == runmin(week_cycles_freq$frequency,length(week_cycles_freq$frequency)/2)))
week_cycles_min <- week_cycles_min %>% filter(local_min == T)
ggplot(data = week_cycles_freq,aes(x = time_hour,
y= week_cycles_freq$frequency,colour = "blue")) +
geom_point(aes(color = "blue")) + geom_line(color = "blue") +
geom_point(data = week_cycles_delay,aes(x=time_hour,y= `sum(delay)`, color ='red')) +
geom_linerange(data = week_cycles_delay,aes(x= time_hour, ymax =`sum(delay)` ,ymin=0),color = 'red') +
scale_color_identity(name ="" ,breaks = c("blue","red"),
labels = c("All Flights (scheculed for departure)",
"Late Flights (departure delayed >15)"),
guide = "legend") +
theme_light()  +
xlab("Date")+ ylab("Flights per day") +
theme(legend.position="top",legend.direction = "vertical") +
ggtitle(label = "Weekly Cycles", subtitle = "the airport, we need to choose, Year = 2013") +
theme(plot.title = element_text(hjust = 0.5,size = 20),plot.subtitle = element_text(hjust = 0.5,size = 15))
#need to takecare in the point of the locl minmun
dep_delay <- as.data.frame(flights) %>% filter(origin == 'EWR') %>%
mutate(delay = if_else(dep_delay <= 15 ,0,1,0)) %>% group_by(faa = dest) %>% summarise(amount = (frequency = n()), dep = sum(delay)) %>% mutate(per = dep/amount)
carrier <- flights_catgory %>% count(carrier)# helpful
carrier
tailnum <-flights_catgory %>% count(tailnum)
tailnum
tailnum <-flights_catgory %>% count(tailnum)
tailnum
origin
origin
origin
dest
flights_catgory
dest
air_time
flights_catgory
countinuous
countinuous
ggplot(data = flights_con) +
geom_bar(mapping = aes(x = day))  # 30 לחודש חשוד
ggplot(data = flights, mapping = aes(x = dep_time/100)) +
geom_histogram(binwidth = 0.25) # טיסות שממריאות בלילה ?
ggplot(data = flights, mapping = aes(x = arr_time/100)) +
geom_histogram(binwidth = 0.25)  # טיסות שמגיעות בלילה?
ggplot(data = flights, mapping = aes(x = sched_dep_time/100)) +
geom_histogram(binwidth = 0.25)
ggplot(data = flights, mapping = aes(x = dep_delay)) +
geom_histogram(binwidth = 1) + xlim(0,300)
dep_delay_over <- flights %>% filter(dep_delay > 300)
ggplot(data = flights, mapping = aes(x = arr_delay)) +
geom_histogram(binwidth = 1) + xlim(0,300)
ggplot(data = flights, mapping = aes(x = sched_arr_time/100)) +
geom_histogram(binwidth = 0.25)
ggplot(data = flights, mapping = aes(x = flight)) +
geom_histogram(binwidth = 1) # מזהה טיסה
ggplot(data = flights, mapping = aes(x = distance)) +
geom_histogram(binwidth = 1) + xlim (0,2000)
ggplot(data = flights, mapping = aes(x = distance/100)) +
geom_histogram(binwidth = 1) + xlim (0,2000)
ggplot(data = flights, mapping = aes(x = distance)) +
geom_histogram(binwidth = 1) + xlim (0,2000)
#EWR/ LGA/ JFK to choose
week_cycles <- as.data.frame(flights) %>% filter(origin == 'JFK') %>% dplyr::select(time_hour ,dep_delay ,sched_dep_time)
#EWR/ LGA/ JFK to choose
week_cycles <- as.data.frame(flights) %>% filter(origin == 'JFK') %>% dplyr::select(time_hour ,dep_delay ,sched_dep_time)
week_cycles$time_hour <- as.Date(week_cycles$time_hour)
week_cycles<- week_cycles %>% mutate(delay = if_else(dep_delay <= 15 ,0,1,0))
week_cycles_freq <- week_cycles %>% group_by(time_hour) %>% summarise(frequency = n())
week_cycles_delay <- week_cycles %>% group_by(time_hour) %>% summarise(sum(delay))
week_cycles_min <- week_cycles_freq %>% mutate(local_min = (week_cycles_freq$frequency == runmin(week_cycles_freq$frequency,length(week_cycles_freq$frequency)/2)))
week_cycles_min <- week_cycles_min %>% filter(local_min == T)
ggplot(data = week_cycles_freq,aes(x = time_hour,
y= week_cycles_freq$frequency,colour = "blue")) +
geom_point(aes(color = "blue")) + geom_line(color = "blue") +
geom_point(data = week_cycles_delay,aes(x=time_hour,y= `sum(delay)`, color ='red')) +
geom_linerange(data = week_cycles_delay,aes(x= time_hour, ymax =`sum(delay)` ,ymin=0),color = 'red') +
scale_color_identity(name ="" ,breaks = c("blue","red"),
labels = c("All Flights (scheculed for departure)",
"Late Flights (departure delayed >15)"),
guide = "legend") +
theme_light()  +
xlab("Date")+ ylab("Flights per day") +
theme(legend.position="top",legend.direction = "vertical") +
ggtitle(label = "Weekly Cycles", subtitle = "the airport, we need to choose, Year = 2013") +
theme(plot.title = element_text(hjust = 0.5,size = 20),plot.subtitle = element_text(hjust = 0.5,size = 15))
#need to takecare in the point of the locl minmun
#EWR/ LGA/ JFK to choose
week_cycles <- as.data.frame(flights) %>% filter(origin == 'LGA') %>% dplyr::select(time_hour ,dep_delay ,sched_dep_time)
#EWR/ LGA/ JFK to choose
week_cycles <- as.data.frame(flights) %>% filter(origin == 'LGA') %>% dplyr::select(time_hour ,dep_delay ,sched_dep_time)
week_cycles$time_hour <- as.Date(week_cycles$time_hour)
week_cycles<- week_cycles %>% mutate(delay = if_else(dep_delay <= 15 ,0,1,0))
week_cycles_freq <- week_cycles %>% group_by(time_hour) %>% summarise(frequency = n())
week_cycles_delay <- week_cycles %>% group_by(time_hour) %>% summarise(sum(delay))
week_cycles_min <- week_cycles_freq %>% mutate(local_min = (week_cycles_freq$frequency == runmin(week_cycles_freq$frequency,length(week_cycles_freq$frequency)/2)))
week_cycles_min <- week_cycles_min %>% filter(local_min == T)
ggplot(data = week_cycles_freq,aes(x = time_hour,
y= week_cycles_freq$frequency,colour = "blue")) +
geom_point(aes(color = "blue")) + geom_line(color = "blue") +
geom_point(data = week_cycles_delay,aes(x=time_hour,y= `sum(delay)`, color ='red')) +
geom_linerange(data = week_cycles_delay,aes(x= time_hour, ymax =`sum(delay)` ,ymin=0),color = 'red') +
scale_color_identity(name ="" ,breaks = c("blue","red"),
labels = c("All Flights (scheculed for departure)",
"Late Flights (departure delayed >15)"),
guide = "legend") +
theme_light()  +
xlab("Date")+ ylab("Flights per day") +
theme(legend.position="top",legend.direction = "vertical") +
ggtitle(label = "Weekly Cycles", subtitle = "the airport, we need to choose, Year = 2013") +
theme(plot.title = element_text(hjust = 0.5,size = 20),plot.subtitle = element_text(hjust = 0.5,size = 15))
#need to takecare in the point of the locl minmun
#EWR/ LGA/ JFK to choose
week_cycles <- as.data.frame(flights) %>% filter(origin == 'EWR') %>% dplyr::select(time_hour ,dep_delay ,sched_dep_time)
week_cycles$time_hour <- as.Date(week_cycles$time_hour)
week_cycles<- week_cycles %>% mutate(delay = if_else(dep_delay <= 15 ,0,1,0))
week_cycles_freq <- week_cycles %>% group_by(time_hour) %>% summarise(frequency = n())
week_cycles_delay <- week_cycles %>% group_by(time_hour) %>% summarise(sum(delay))
week_cycles_min <- week_cycles_freq %>% mutate(local_min = (week_cycles_freq$frequency == runmin(week_cycles_freq$frequency,length(week_cycles_freq$frequency)/2)))
week_cycles_min <- week_cycles_min %>% filter(local_min == T)
ggplot(data = week_cycles_freq,aes(x = time_hour,
y= week_cycles_freq$frequency,colour = "blue")) +
geom_point(aes(color = "blue")) + geom_line(color = "blue") +
geom_point(data = week_cycles_delay,aes(x=time_hour,y= `sum(delay)`, color ='red')) +
geom_linerange(data = week_cycles_delay,aes(x= time_hour, ymax =`sum(delay)` ,ymin=0),color = 'red') +
scale_color_identity(name ="" ,breaks = c("blue","red"),
labels = c("All Flights (scheculed for departure)",
"Late Flights (departure delayed >15)"),
guide = "legend") +
theme_light()  +
xlab("Date")+ ylab("Flights per day") +
theme(legend.position="top",legend.direction = "vertical") +
ggtitle(label = "Weekly Cycles", subtitle = "the airport, we need to choose, Year = 2013") +
theme(plot.title = element_text(hjust = 0.5,size = 20),plot.subtitle = element_text(hjust = 0.5,size = 15))
#need to takecare in the point of the locl minmun
dep_delay <- as.data.frame(flights) %>% filter(origin == 'EWR') %>%
mutate(delay = if_else(dep_delay <= 15 ,0,1,0)) %>% group_by(faa = dest) %>% summarise(amount = (frequency = n()), dep = sum(delay)) %>% mutate(per = dep/amount)
dep_delay_loc <- dep_delay %>% left_join(airports, by = "faa") %>% drop_na()
# removed : STT,SJU, BQN need to be explain why they can be found.
dep_delay_loc <- dep_delay_loc %>% mutate(perc = if_else(per <= 0.10 ,"<= 10%",0,0))
geo <- list(
scope = 'north america',
projection = list(type = 'azimuthal equal area'),
showland = TRUE,
landcolor = toRGB("gray95"),
countrycolor = toRGB("gray80")
)
fig <- plot_geo(locationmode = 'USA-states', color = I("red"))
fig <- fig %>% add_markers(
data = dep_delay_loc, x = ~lon, y = ~lat, text = ~name,
hoverinfo = "text", alpha = 0.5)
fig <- fig %>% add_segments(
data = group_by(flights, id),
x = ~start_lon, xend = ~end_lon,
y = ~start_lat, yend = ~end_lat,
alpha = 0.3, size = I(1), hoverinfo = "none"
)
flights
summary(flights)
plot(flights$month)
summary(flights)
plot(flights$month)
summary(flights)
plot(flights$month)
ggplot(data = flights, mapping = aes(x = flights$month, y = flights$dep_delay)) +
geom_boxplot()
summary(flights)
ggplot(data = flights, mapping = aes(x = month, y = dep_delay)) +
geom_boxplot()
ggplot(data = flights, mapping = aes( x = month, y = dep_delay, group = month)) +
geom_boxplot()
ggplot(data = flights, mapping = aes( x = month, y = dep_delay)) +
geom_boxplot(mapping = aes(group = month))
ggplot(data = flights, mapping = aes( x = month, y = dep_delay)) +
geom_boxplot(mapping = aes(group = cut_width(month)))
ggplot(data = flights, mapping = aes( x = month, y = dep_delay)) +
geom_boxplot(mapping = aes(group = cut_width(month,0.1)))
flights$month <- as.character(flights$month)
ggplot(data = flights, mapping = aes( x = month, y = dep_delay)) +
geom_boxplot(mapping = aes(group = cut_width(month,0.1)))
ggplot(data = flights, mapping = aes( x = month, y = dep_delay)) +
geom_boxplot(mapping = aes(group = cut_width(month,0.1))) + coord_cartesian(ylim = c(0:1000))
ggplot(data = flights, mapping = aes( x = month, y = dep_delay)) +
geom_boxplot(mapping = aes(group = cut_width(month,0.1))) + coord_cartesian(ylim = c(0,1000))
ggplot(data = flights, mapping = aes( x = month, y = dep_delay)) +
geom_boxplot(mapping = aes(group = cut_width(month,0.1))) + coord_cartesian(ylim = c(0,500))
summary(flights)
ggplot(data = flights, mapping = aes( x = month, y = arr_time)) +
geom_boxplot(mapping = aes(group = cut_width(month,0.1))) + coord_cartesian(ylim = c(0,500))
ggplot(data = flights, mapping = aes( x = month, y = arr_time)) +
geom_boxplot(mapping = aes(group = cut_width(month,0.1)))
summary(flights)
ggplot(data = flights, mapping = aes( x = month, y = dep_time    )) +
geom_boxplot(mapping = aes(group = cut_width(month,0.1)))
summary(flights)
ggplot(data = flights, mapping = aes( x = month, y = sched_dep_time)) +
geom_boxplot(mapping = aes(group = cut_width(month,0.1)))
summary(flights)
ggplot(data = flights, mapping = aes( x = month, y = arr_dep_time)) +
geom_boxplot(mapping = aes(group = cut_width(month,0.1)))
summary(flights)
ggplot(data = flights, mapping = aes( x = month, y = arr_delay          )) +
geom_boxplot(mapping = aes(group = cut_width(month,0.1)))
ggplot(data = flights, mapping = aes( x = month, y = arr_delay)) +
geom_boxplot(mapping = aes(group = cut_width(month,0.1))) +coord_cartesian(ylim = c(0, 500))
i
summary(flights)
summary(flights)
ggplot(data = flights, mapping = aes( x = month, y = air_time    )) +
geom_boxplot(mapping = aes(group = cut_width(month,0.1))) +coord_cartesian(ylim = c(0, 500))
ggplot(data = flights, mapping = aes( x = month, y = air_time    )) +
geom_boxplot(mapping = aes(group = cut_width(month,0.1))) #+coord_cartesian(ylim = c(0, 500))
summary(flights)
ggplot(data = flights, mapping = aes( x = month, y = dest )) +
geom_boxplot(mapping = aes(group = cut_width(month,0.1))) #+coord_cartesian(ylim = c(0, 500))
summary(flights)
ggplot(data = flights, mapping = aes( x = month, y = distance )) +
geom_boxplot(mapping = aes(group = cut_width(month,0.1))) #+coord_cartesian(ylim = c(0, 500))
summary(flights)
distance
ggplot(data = flights, mapping = aes( x = month, y = time_hour                   )) +
geom_boxplot(mapping = aes(group = cut_width(month,0.1))) #+coord_cartesian(ylim = c(0, 500))
ggplot(data = flights, mapping = aes( x = month, y = hour)) +
geom_boxplot(mapping = aes(group = cut_width(month,0.1))) #+coord_cartesian(ylim = c(0, 500))
ggplot(data = flights, mapping = aes( x = hour, y = dep_time    )) +
geom_boxplot(mapping = aes(group = cut_width(hour,0.1))) #+coord_cartesian(ylim = c(0, 500))
summary(flights)
ggplot(data = flights, mapping = aes( x = day, y = dep_time)) +
geom_boxplot(mapping = aes(group = cut_width(day,0.1))) +coord_cartesian(xlim = c(0, 24))
ggplot(data = flights, mapping = aes( x = day, y = dep_time)) +
geom_boxplot(mapping = aes(group = cut_width(day,0.1))) +coord_cartesian(xlim = c(1, 24))
ggplot(data = flights, mapping = aes( x = day, y = sched_dep_time)) +
geom_boxplot(mapping = aes(group = cut_width(day,0.1))) +coord_cartesian(xlim = c(1, 24))
ggplot(data = flights, mapping = aes( x = day, y = dep_delay)) +
geom_boxplot(mapping = aes(group = cut_width(day,0.1))) +coord_cartesian(xlim = c(1, 24))
ggplot(data = flights, mapping = aes( x = day, y = sched_dep_time)) +
geom_boxplot(mapping = aes(group = cut_width(day,0.1))) +coord_cartesian(xlim = c(1, 24), ylim = c(0,500))
ggplot(data = flights, mapping = aes( x = day, y = sched_dep_time)) +
geom_boxplot(mapping = aes(group = cut_width(day,0.1))) #+coord_cartesian(xlim = c(1, 24), ylim = c(0,500))
ggplot(data = flights, mapping = aes( x = day, y = dep_delay)) +
geom_boxplot(mapping = aes(group = cut_width(day,0.1))) #+coord_cartesian(xlim = c(1, 24), ylim = c(0,500))
ggplot(data = flights, mapping = aes( x = day, y = dep_delay)) +
geom_boxplot(mapping = aes(group = cut_width(day,0.1))) +coord_cartesian(xlim = c(1, 24), ylim = c(0,500))
ggplot(data = flights, mapping = aes( x = day, y = arr_time)) +
geom_boxplot(mapping = aes(group = cut_width(day,0.1))) #+coord_cartesian(xlim = c(1, 24), ylim = c(0,500))
ggplot(data = flights, mapping = aes( x = day, y = sched_arr_time)) +
geom_boxplot(mapping = aes(group = cut_width(day,0.1))) #+coord_cartesian(xlim = c(1, 24), ylim = c(0,500))
ggplot(data = flights, mapping = aes( x = day, y = arr_delay)) +
geom_boxplot(mapping = aes(group = cut_width(day,0.1))) #+coord_cartesian(xlim = c(1, 24), ylim = c(0,500))
ggplot(data = flights, mapping = aes( x = day, y = arr_delay)) +
geom_boxplot(mapping = aes(group = cut_width(day,0.1))) +coord_cartesian(xlim = c(1, 24), ylim = c(0,500))
summary(flights)
ggplot(data = flights, mapping = aes( x = hour, y = dep_time)) +
geom_boxplot(mapping = aes(group = cut_width(hour,0.1))) +coord_cartesian(xlim = c(1, 24), ylim = c(0,500))
#בדיקת המשתנים הקטגוריים אל מול המשתנים הרציפיים - למטרת למידת הנתונים
ggplot(data = flights, mapping = aes( x = hour, y = dep_time)) +
geom_boxplot(mapping = aes(group = cut_width(hour,0.1))) #+coord_cartesian(xlim = c(1, 24), ylim = c(0,500))
#בדיקת המשתנים הקטגוריים אל מול המשתנים הרציפיים - למטרת למידת הנתונים
ggplot(data = flights, mapping = aes( x = hour, y = dep_time)) +
geom_boxplot(mapping = aes(group = cut_width(hour,0.1))) +coord_cartesian(xlim = c(1, 24))
#בדיקת המשתנים הקטגוריים אל מול המשתנים הרציפיים - למטרת למידת הנתונים
ggplot(data = flights, mapping = aes( x = hour, y = dep_delay)) +
geom_boxplot(mapping = aes(group = cut_width(hour,0.1))) +coord_cartesian(xlim = c(1, 24))
#בדיקת המשתנים הקטגוריים אל מול המשתנים הרציפיים - למטרת למידת הנתונים
ggplot(data = flights, mapping = aes( x = hour, y = dep_time)) +
geom_boxplot(mapping = aes(group = cut_width(hour,0.1))) +coord_cartesian(xlim = c(1, 24))
#בדיקת המשתנים הקטגוריים אל מול המשתנים הרציפיים - למטרת למידת הנתונים
ggplot(data = flights, mapping = aes( x = hour, y = sched_dep_time)) +
geom_boxplot(mapping = aes(group = cut_width(hour,0.1))) +coord_cartesian(xlim = c(1, 24))
#בדיקת המשתנים הקטגוריים אל מול המשתנים הרציפיים - למטרת למידת הנתונים
ggplot(data = flights, mapping = aes( x = hour, y = dep_delay)) +
geom_boxplot(mapping = aes(group = cut_width(hour,0.1))) +coord_cartesian(xlim = c(1, 24))
#בדיקת המשתנים הקטגוריים אל מול המשתנים הרציפיים - למטרת למידת הנתונים
ggplot(data = flights, mapping = aes( x = hour, y = dep_delay)) +
geom_boxplot(mapping = aes(group = cut_width(hour,0.1))) +coord_cartesian(xlim = c(1, 24), ylim = c(0, 500))
#בדיקת המשתנים הקטגוריים אל מול המשתנים הרציפיים - למטרת למידת הנתונים
ggplot(data = flights, mapping = aes( x = hour, y = arr_time)) +
geom_boxplot(mapping = aes(group = cut_width(hour,0.1))) +coord_cartesian(xlim = c(1, 24), ylim = c(0, 500))
#בדיקת המשתנים הקטגוריים אל מול המשתנים הרציפיים - למטרת למידת הנתונים
ggplot(data = flights, mapping = aes( x = hour, y = arr_time)) +
geom_boxplot(mapping = aes(group = cut_width(hour,0.1))) +coord_cartesian(xlim = c(1, 24))
#בדיקת המשתנים הקטגוריים אל מול המשתנים הרציפיים - למטרת למידת הנתונים
ggplot(data = flights, mapping = aes( x = hour, y = arr_delay)) +
geom_boxplot(mapping = aes(group = cut_width(hour,0.1))) +coord_cartesian(xlim = c(1, 24))
#בדיקת המשתנים הקטגוריים אל מול המשתנים הרציפיים - למטרת למידת הנתונים
ggplot(data = flights, mapping = aes( x = hour, y = air_time)) +
geom_boxplot(mapping = aes(group = cut_width(hour,0.1))) +coord_cartesian(xlim = c(1, 24))
